{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","chart-data.service.ts":"/**\n * chart data source\n */\nexport class ChartDataService {\n    GetCrosshairData(): any {\n        let series1: Object[] = [];\n        let series2: Object[] = [];\n        let point1: Object;\n        let point2: Object;\n        let value: number = 60;\n        let value1: number = 50;\n        let i: number;\n        for (i = 1; i < 250; i++) {\n\n            if (Math.random() > .5) {\n                value += Math.random();\n                value1 += Math.random();\n            } else {\n                value -= Math.random();\n                value1 -= Math.random();\n            }\n            point1 = { x: new Date(2000, i, 1), y: value };\n            point2 = { x: new Date(2000, i, 1), y: value1 };\n            series1.push(point1);\n            series2.push(point2);\n        }\n        return { 'series1': series1, 'series2': series2 };\n    }\n    GetScatterData(): any {\n        let series1: Object[] = [];\n        let series2: Object[] = [];\n        let point1: Object;\n        let value: number = 80;\n        let value1: number = 70;\n        let i: number;\n        for (i = 1; i < 120; i++) {\n            if (Math.random() > 0.5) {\n                value += Math.random();\n            } else {\n                value -= Math.random();\n            }\n            value = value < 60 ? 60 : value > 90 ? 90 : value;\n            point1 = { x: (145 + (i / 3)).toFixed(1), y: value.toFixed(1) };\n            series1.push(point1);\n        }\n        for (i = 1; i < 120; i++) {\n            if (Math.random() > 0.5) {\n                value1 += Math.random();\n            } else {\n                value1 -= Math.random();\n            }\n            value1 = value1 < 60 ? 60 : value1 > 90 ? 90 : value1;\n            point1 = { x: (145 + (i / 3)).toFixed(1), y: value1.toFixed(1) };\n            series2.push(point1);\n        }\n        return { 'series1': series1, 'series2': series2 };\n    }\n    GetLocalData(): any {\n        let series1: Object[] = [];\n        let series2: Object[] = [];\n        let point1: Object;\n        let point2: Object;\n        let value: number = 80;\n        let value1: number = 90;\n        let i: number;\n        for (i = 1; i < 500; i++) {\n\n            if (Math.random() > .5) {\n                value += Math.random();\n                value1 += Math.random();\n            } else {\n                value -= Math.random();\n                value1 -= Math.random();\n            }\n            point1 = { x: new Date(1960, (i + 1), i), y: Math.round(value) };\n            point2 = { x: new Date(1960, (i + 1), i), y: Math.round(value1) };\n            series1.push(point1);\n            series2.push(point2);\n        }\n        return { 'series1': series1, 'series2': series2 };\n    }\n    GetZoomingData(): any {\n        let series1: Object[] = [];\n        let point1: Object;\n        let value: number = 80;\n        let i: number;\n        for (i = 1; i < 500; i++) {\n            if (Math.random() > .5) {\n                value += Math.random();\n            } else {\n                value -= Math.random();\n            }\n            point1 = { x: new Date(1960, i + 1, i), y: Math.round(value) };\n            series1.push(point1);\n        }\n        return { 'series1': series1 };\n    }\n    GetPolarSplineData(): any {\n        let cardData: Object[] = [];\n        let biDirData: Object[] = [];\n        let omniDirData: Object[] = [];\n        let point1: Object;\n        let point2: Object;\n    \n        for (let x: number = -180; x < 180; x++) {\n          point1 = { x: x, y: -12.6 * (1 - Math.cos(x * 3.14 / 180)) };\n          cardData.push(point1);\n          point2 = { x: x, y: -3};\n          omniDirData.push(point2);\n        }\n    \n        for (let x: number = -180; x < -90; x++) {\n          point1 = { x: x, y: -26 * (1 + Math.cos(x * 3.14 / 180))};\n          biDirData.push(point1);\n        }\n    \n        for (let x: number = -90; x < 90; x++) {\n          point1 = { x: x, y: -26 * (1 - Math.cos(x * 3.14 / 180))};\n          biDirData.push(point1);\n        }\n    \n        for (let x: number = 90; x < 180; x++) {\n          point1 = { x: x, y: -26 * (1 + Math.cos(x * 3.14 / 180))};\n          biDirData.push(point1);\n        }\n        return { 'series1': cardData, 'series2': omniDirData, 'series3': biDirData };\n    }\n}","app.component.ts":"import { Component, ViewEncapsulation } from '@angular/core';\nimport { ChartDataService } from './chart-data.service';\nimport { ILoadedEventArgs, ChartTheme, ScrollBar, ChartAllModule } from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n\n/**\n * Sample for Zooming in chart\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ChartAllModule,  ]\n})\nexport class AppComponent {\n    public selectedTheme: string = (location.hash.split('/')[1]) ? (location.hash.split('/')[1]) : 'Material';\n    public theme: ChartTheme = <ChartTheme>(this.selectedTheme.charAt(0).toUpperCase() +\n    this.selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n    public themes : string[] = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2dark'];\n    public borderColor : string[] = ['#6355C7', '#8F80F4', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449'];\n    public fill : string = 'url(#' + this.selectedTheme + '-gradient-chart)';\n    //Initializing Primary X Axis\n    public primaryXAxis: Object = {\n        valueType: 'DateTime',\n        edgeLabelPlacement: 'Shift',\n        majorGridLines: { width: 0 }\n    };\n    //Initializing Primary Y Axis\n    public primaryYAxis: Object = {\n        title: 'Profit ($)',\n        rangePadding: 'None',\n        labelFormat: \"${value}k\",\n        lineStyle: { width: 0 },\n        majorTickLines: { width: 0 }\n    };\n    public legend: Object = {\n        visible: false\n    };\n    public animation: Object = { enable: false };\n    public zoomSettings: Object = {\n        mode: 'X',\n        enableMouseWheelZooming: true,\n        enablePinchZooming: true,\n        enableSelectionZooming: true,\n        showToolbar: true\n    };\n    public chartArea: Object = {\n        border: {\n            width: 0\n        }\n    };\n    \n     // custom code start\n    public width: string = Browser.isDevice ? '100%' : '75%';\n    public load(args: ILoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast').replace(/-highContrast/i, 'HighContrast');\n        let themes : string[] = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark', 'material3', 'material3dark', 'fluent2', 'fluent2dark'];\n        let borderColor : string[] = ['#6355C7', '#8F80F4', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF', '#6200EE', '#9BB449'];\n        args.chart.scrollBarModule = new ScrollBar(args.chart);\n        args.chart.series[0].border.color = borderColor[themes.indexOf(args.chart.theme.toLowerCase())];\n        args.chart.series[0].fill = 'url(#' + selectedTheme + '-gradient-chart)';\n        args.chart.theme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() +\n        selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i,  'Contrast').replace(/-highContrast/i, 'HighContrast');;\n    };\n     // custom code end\n    public border: Object = { width: 2, color: this.borderColor[this.themes.indexOf(this.theme)] };\n    public title: string = 'Sales History of Product X';\n    public series1: Object = ChartDataService.prototype.GetZoomingData().series1;\n    constructor() {\n        //code\n    };\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    #material-gradient-chart stop {\n        stop-color: #00bdae;\n    }\n\n    #fabric-gradient-chart stop {\n        stop-color: #4472c4;\n    }\n\n    #bootstrap-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #bootstrap4-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #highcontrast-gradient-chart stop {\n        stop-color: #79ECE4;\n    }\n\n    #tailwind-gradient-chart stop {\n        stop-color: #5A61F6;\n    }\n\n    #bootstrap5-gradient-chart stop {\n        stop-color: #6355C7;\n    }\n\n    #material-dark-gradient-chart stop {\n        stop-color: #9ECB08;\n    }\n\n    #fabric-dark-gradient-chart stop {\n        stop-color: #4472c4;\n    }\n\n    #bootstrap-dark-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #tailwind-dark-gradient-chart stop {\n        stop-color: #8B5CF6;\n    }\n\n    #bootstrap5-dark-gradient-chart stop {\n        stop-color: #8F80F4;\n    }\n    #fluent-gradient-chart stop {\n        stop-color: #1AC9E6;\n    }\n\n   #fluent-dark-gradient-chart stop {\n      stop-color: #1AC9E6;\n    }\n\n    #material3-gradient-chart stop {\n        stop-color: #6355C7;\n    }\n\n    #material3-dark-gradient-chart stop {\n        stop-color: #4EAAFF;\n    }\n\n    #fluent2-gradient-chart stop {\n        stop-color: #6200EE;\n    }\n\n    #fluent2-dark-gradient-chart stop {\n        stop-color: #9BB449;\n    }\n\n    #fluent2-highcontrast-gradient-chart stop {\n        stop-color: #9BB449;\n    }\n\n    .chart-gradient stop[offset=\"0\"] {\n        stop-opacity: 0.75;\n    }\n\n    .chart-gradient stop[offset=\"1\"] {\n        stop-opacity: 0;\n    }\n\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n\n<div class=\"control-section\">\n    <div align='center'>\n        <ejs-chart id='chartcontainer' style='display:block;width: 100%' [chartArea]='chartArea' [width]='width' align='center'\n            [primaryXAxis]='primaryXAxis' [legendSettings]='legend' [zoomSettings]='zoomSettings' [title]='title' [primaryYAxis]='primaryYAxis'\n            (load)='load($event)'>\n            <e-series-collection>\n                <e-series [dataSource]='series1' type='SplineArea' xName='x' yName='y' name='Product X' [fill]=\"fill\" [animation]='animation' [border]='border'>\n                </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n</div>\n\n<svg style=\"height: 0\">\n    <defs>\n        <linearGradient id=\"material-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fabric-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap4-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"highcontrast-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"tailwind-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap5-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"material-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fabric-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"tailwind-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap5-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fluent-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fluent-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"material3-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"material3-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fluent2-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fluent2-dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fluent2-highcontrast-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n    </defs>\n</svg>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}