{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { DatePickerModule } from '@syncfusion/ej2-angular-calendars';\nimport { DropDownListAllModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { ChartAllModule, AccumulationChartAllModule, RangeNavigatorAllModule } from '@syncfusion/ej2-angular-charts';\nimport { DashboardLayoutModule } from '@syncfusion/ej2-angular-layouts';\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    AccumulationChart, AccumulationChartComponent, IAccLoadedEventArgs, AccumulationTheme\n} from '@syncfusion/ej2-angular-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Sample for Pie with Various Radius\n */\n@Component({\n    standalone: true,\n    imports: [ ChartAllModule, RangeNavigatorAllModule,  ButtonModule, AccumulationChartAllModule, NumericTextBoxModule, DatePickerModule, DropDownListAllModule, DashboardLayoutModule],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    public data: Object[] = [\n        { Country : \"Argentina\", Population : 505370, Radius : Browser.isDevice ? '110' : \"100\", text: 'Argentina'},\n        { Country : \"Belgium\",    Population : 551500, Radius : Browser.isDevice ? '120' :\"118.7\", text: 'Belgium' },\n        { Country : \"Dominican Republic\",  Population : 312685 , Radius : '137.5', text: Browser.isDevice ? 'Dominican <br> Republic' :  'Dominican Republic' },\n        { Country : \"Cuba\", Population : 350000 , Radius : '124.6', text: 'Cuba'},\n        { Country : \"Egypt\", Population : 301000 , Radius : \"150.8\", text: 'Egypt'},\n        { Country : \"Kazakhstan\", Population : 300000, Radius : \"155.5\",text: 'Kazakhstan'},\n        { Country : \"Somalia\",  Population : 357022, Radius : \"160.6\", text: 'Somalia'}\n    ];\n    @ViewChild('pie')\n    public pie: AccumulationChartComponent | AccumulationChart;\n    //Initializing Legend\n    public legendSettings: Object = {\n        visible: true,\n        reverse: true\n    };\n    //Initializing Datalabel\n    public dataLabel: Object = {\n        visible: true, position: Browser.isDevice ? 'Inside' : 'Outside',\n        name: 'text',\n        connectorStyle: { length: '20px', type:'Curve' },\n        font: {\n            fontWeight: '600'\n        },\n        enableRotation: true,\n    };\n      // custom code start\n    public load(args: IAccLoadedEventArgs): void {\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.accumulation.theme = <AccumulationTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast');\n    }\n      // custom code end\n    public radius: string = 'Radius';\n    public enableAnimation: boolean = true;\n    public enableSmartLabels: boolean = true;\n    public tooltip: Object = {\n        enable: true,\n        header: '',\n        format: '<b>${point.x}</b><br>Area in square km: <b>${point.y}</b><br>Population density per square km: <b>${point.tooltip}</b>',\n        name: 'Radius'\n    };\n    public title: string = 'Pie with different Radius';\n    constructor() {\n        //code\n    };\n\n}\n\n\n","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div>\n        <ejs-accumulationchart id=\"container\" #pie style='display:block; width: 92%' [legendSettings]=\"legendSettings\"\n            [tooltip]=\"tooltip\" [title]=\"title\" [enableSmartLabels]='enableSmartLabels'\n            [enableAnimation]='enableAnimation' (load)='load($event)' [enableBorderOnMouseMove]='false'>\n            <e-accumulation-series-collection>\n                <e-accumulation-series [dataSource]='data' xName='Country' yName='Population' innerRadius=\"20%\" [dataLabel]=\"dataLabel\" [radius]='radius' tooltipMappingName='Radius'>\n                </e-accumulation-series>\n            </e-accumulation-series-collection>\n        </ejs-accumulationchart>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-angular-layouts\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}