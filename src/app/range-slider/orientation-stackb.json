{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\nimport { SliderModule } from '@syncfusion/ej2-angular-inputs';\nimport { CheckBoxModule, ButtonModule  } from '@syncfusion/ej2-angular-buttons';\nimport { NumericTextBoxModule, TextBoxModule} from '@syncfusion/ej2-angular-inputs';\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { SliderModule, SliderComponent } from '@syncfusion/ej2-angular-inputs';\nimport { TicksDataModel, TooltipDataModel, Placement } from '@syncfusion/ej2-inputs';\nimport { CheckBoxComponent, ChangeEventArgs } from '@syncfusion/ej2-angular-buttons';\n\n/**\n * Orientation sample\n */\n\n@Component({\n    standalone: true,\n    imports: [  DialogModule, SliderModule,  CheckBoxModule, NumericTextBoxModule, TextBoxModule, DropDownListModule, ButtonModule],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    @ViewChild('default')\n    public defaultObj: SliderComponent;\n    @ViewChild('minrange')\n    public minRangeObj: SliderComponent;\n    @ViewChild('range')\n    public rangeObj: any;\n    @ViewChild('reverse')\n    public reverseObj: any;\n    public value: number = 30;\n    public rangevalue: Number[] = [30, 70];\n    public reversevalue: Number[] = [30, 70];\n    public mintype: string = 'MinRange';\n    public rangetype: string = 'Range';\n    public orientation: string = 'Vertical';\n    public ticks: TicksDataModel = { placement: 'Before', largeStep: 20, smallStep: 5, showSmallTicks: true };\n    public tooltipData: TooltipDataModel = { isVisible: true, placement: 'Before' };\n    enableDisableTicks(args: ChangeEventArgs): void {\n        this.defaultObj.ticks.placement = args.checked ? 'Before' : 'None';\n        this.minRangeObj.ticks.placement = args.checked ? 'Before' : 'None';\n        this.rangeObj.ticks.placement = args.checked ? 'Before' : 'None';\n        this.reverseObj.ticks.placement = args.checked ? 'Before' : 'None';\n    }\n    enableDisableTooltip(args: ChangeEventArgs): void {\n        this.defaultObj.tooltip.isVisible = args.checked;\n        this.minRangeObj.tooltip.isVisible = args.checked;\n        this.rangeObj.tooltip.isVisible = args.checked;\n        this.rangeObj.dataBind();\n        this.rangeObj.tooltipObj.dataBind();\n        this.reverseObj.tooltip.isVisible = args.checked;\n        this.reverseObj.dataBind();\n        this.reverseObj.tooltipObj.dataBind();\n    }\n    ngOnInit() {\n        document.getElementById('right-pane').addEventListener('scroll', this.onScroll.bind(this));\n    }\n    // Handler used to reposition the tooltip on page scroll\n    onScroll(): void {\n        let slider: any = [this.defaultObj, this.minRangeObj, this.rangeObj, this.reverseObj];\n        slider.forEach((slider: any) => {\n            slider.refreshTooltip(slider.tooltipTarget);\n        });\n    }\n}\n","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"col-lg-8 control-section\">\n    <div class=\"control-wrapper\">\n        <div id=\"sliderOrientation\" class='content-wrapper'>\n            <table class=\"slider_table\">\n                <tr>\n                    <td>\n                        <div class=\"sliderwrap\">\n                            <ejs-slider id='default' #default [value]='value' [orientation]='orientation' [ticks]='ticks' [tooltip]='tooltipData'></ejs-slider>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"sliderwrap\">\n                            <ejs-slider id='minrange' #minrange [value]='value' [type]='mintype' [orientation]='orientation' [ticks]='ticks' [tooltip]='tooltipData'></ejs-slider>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"sliderwrap\">\n                            <ejs-slider id='range' #range [value]='rangevalue' [type]='rangetype' [orientation]='orientation' [ticks]='ticks' [tooltip]='tooltipData'></ejs-slider>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"sliderwrap\">\n                            <ejs-slider id='range' #reverse [value]='reversevalue' [min]=100 [max]=0 [type]='rangetype' [orientation]='orientation' [ticks]='ticks' [tooltip]='tooltipData'></ejs-slider>\n                        </div>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-4 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" class=\"property-panel-table\" title=\"Properties\">\n                <tbody>\n                    <tr>\n                        <td style=\"width: 30%\">\n                            <div class=\"userselect\">Ticks</div>\n                        </td>\n                        <td style=\"width: 70%;padding-right: 10px\">\n                            <ejs-checkbox #checkbox id=\"ticks\" [checked]=\"true\" (change)=\"enableDisableTicks($event)\"></ejs-checkbox>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 30%\">\n                            <div class=\"userselect\">Tooltip</div>\n                        </td>\n                        <td style=\"width: 70%;padding-right: 10px\">\n                            <ejs-checkbox #tooltip id=\"tooltip\" [checked]=\"true\" (change)=\"enableDisableTooltip($event)\"></ejs-checkbox>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n","app.component.css":"#sliderOrientation.content-wrapper {\n    width: 80%;\n    margin: 0 auto;\n    min-width: 185px;\n}\n#sliderOrientation .sliderwrap {\n    height: 375px;\n    margin-top: 10px;\n    width: 60%;\n    margin: auto;\n}\n#sliderOrientation .slider_table {\n    border: 0;\n    width: 100%\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}