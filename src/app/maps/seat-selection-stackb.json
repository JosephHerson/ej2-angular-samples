{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","seat-data.json":"{ \"type\": \"FeatureCollection\", \"features\": [\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 0], [0, 20], [20, 20], [20, 0], [0, 0]]], [[[0, 22], [0, 27], [20, 27], [20, 22], [0, 22]]]] }, \"properties\": { \"seatno\": 19, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 47], [0, 67], [20, 67], [20, 47], [0, 47]]], [[[0, 69], [0, 74], [20, 74], [20, 69], [0, 69]]]] }, \"properties\": { \"seatno\": 18, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 94], [0, 114], [20, 114], [20, 94], [0, 94]]], [[[0, 116], [0, 121], [20, 121], [20, 116], [0, 116]]]] }, \"properties\": { \"seatno\": 13, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 141], [0, 161], [20, 161], [20, 141], [0, 141]]], [[[0, 163], [0, 168], [20, 168], [20, 163], [0, 163]]]] }, \"properties\": { \"seatno\": 12, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 188], [0, 208], [20, 208], [20, 188], [0, 188]]], [[[0, 210], [0, 215], [20, 215], [20, 210], [0, 210]]]] }, \"properties\": { \"seatno\": 7, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 235], [0, 255], [20, 255], [20, 235], [0, 235]]], [[[0, 257], [0, 262], [20, 262], [20, 257], [0, 257]]]] }, \"properties\": { \"seatno\": 6, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[0, 282], [0, 302], [20, 302], [20, 282], [0, 282]]], [[[0, 304], [0, 309], [20, 309], [20, 304], [0, 304]]]] }, \"properties\": { \"seatno\": 1, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 0], [50, 20], [70, 20], [70, 0], [50, 0]]], [[[50, 22], [50, 27], [70, 27], [70, 22], [50, 22]]]] }, \"properties\": { \"seatno\": 20, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 47], [50, 67], [70, 67], [70, 47], [50, 47]]], [[[50, 69], [50, 74], [70, 74], [70, 69], [50, 69]]]] }, \"properties\": { \"seatno\": 17, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 94], [50, 114], [70, 114], [70, 94], [50, 94]]], [[[50, 116], [50, 121], [70, 121], [70, 116], [50, 116]]]] }, \"properties\": { \"seatno\": 14, \"fill\": \"Orange\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 141], [50, 161], [70, 161], [70, 141], [50, 141]]], [[[50, 163], [50, 168], [70, 168], [70, 163], [50, 163]]]] }, \"properties\": { \"seatno\": 11, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 188], [50, 208], [70, 208], [70, 188], [50, 188]]], [[[50, 210], [50, 215], [70, 215], [70, 210], [50, 210]]]] }, \"properties\": { \"seatno\": 8, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 235], [50, 255], [70, 255], [70, 235], [50, 235]]], [[[50, 257], [50, 262], [70, 262], [70, 257], [50, 257]]]] }, \"properties\": { \"seatno\": 5, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[50, 282], [50, 302], [70, 302], [70, 282], [50, 282]]], [[[50, 304], [50, 309], [70, 309], [70, 304], [50, 304]]]] }, \"properties\": { \"seatno\": 2, \"fill\": \"Orange\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 0], [80, 20], [100, 20], [100, 0], [80, 0]]], [[[80, 22], [80, 27], [100, 27], [100, 22], [80, 22]]]] }, \"properties\": { \"seatno\": 21, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 47], [80, 67], [100, 67], [100, 47], [80, 47]]], [[[80, 69], [80, 74], [100, 74], [100, 69], [80, 69]]]] }, \"properties\": { \"seatno\": 16, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 94], [80, 114], [100, 114], [100, 94], [80, 94]]], [[[80, 116], [80, 121], [100, 121], [100, 116], [80, 116]]]] }, \"properties\": { \"seatno\": 15, \"fill\": \"Orange\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 141], [80, 161], [100, 161], [100, 141], [80, 141]]], [[[80, 163], [80, 168], [100, 168], [100, 163], [80, 163]]]] }, \"properties\": { \"seatno\": 10, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 188], [80, 208], [100, 208], [100, 188], [80, 188]]], [[[80, 210], [80, 215], [100, 215], [100, 210], [80, 210]]]] }, \"properties\": { \"seatno\": 9, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 235], [80, 255], [100, 255], [100, 235], [80, 235]]], [[[80, 257], [80, 262], [100, 262], [100, 257], [80, 257]]]] }, \"properties\": { \"seatno\": 4, \"fill\": \"gray\" } },\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[80, 282], [80, 302], [100, 302], [100, 282], [80, 282]]], [[[80, 304], [80, 309], [100, 309], [100, 304], [80, 304]]]] }, \"properties\": { \"seatno\": 3, \"fill\": \"gray\" } }\n    ] }","app.component.ts":"/**\n * Seat Selection sample\n */\nimport { Component, ViewEncapsulation, Inject } from '@angular/core';\nimport { MapsTheme, Maps, ISelectionEventArgs, Selection, ILoadEventArgs } from '@syncfusion/ej2-angular-maps';\nimport { MapAjax } from '@syncfusion/ej2-maps';\nMaps.Inject(Selection);\ninterface SeatInfo {\n    seatno?: number;\n    fill?: string;\n}\ndeclare var require: any;\nimport seat_selection from './seat-data.json';\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n    public zoomSettings: object = {\n        enable: false\n    };\n    public seatInfo: HTMLDivElement;\n    // custom code start\n    public load = (args: ILoadEventArgs) => {\n        let theme: string = location.hash.split('/')[1];\n        theme = theme ? theme : 'Material';\n        args.maps.theme = <MapsTheme>(theme.charAt(0).toUpperCase() +\n        theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i,  'Contrast');\n    }\n    // custom code end\n    public itemSelection = (args: ISelectionEventArgs) => {\n        if ((args.shapeData as SeatInfo).fill === 'Orange') {\n            args.fill = 'Orange';\n            document.getElementById(args.target).setAttribute('class', 'ShapeselectionMapStyle');\n            return;\n        }\n        args.fill = 'green';\n        let seat: number = (args.shapeData as SeatInfo).seatno;\n        let connector: string = ' ';\n        if (this.seatInfo.innerHTML === '') {\n            this.seatInfo.innerHTML = '<span id=\"seat-info\">Seats Selected -</span>';\n        } else {\n            connector = ', ';\n        }\n        let seatString: string = '<span class=\"seats\">' + connector + seat + '</span>';\n        let seatString1: string = ' ' + seat + '</span><span class=\"seats\">,'; // 15</span><span class=\"seats\">,\n        let lastString: string = '<span id=\"seat-info\">Seats Selected -</span><span class=\"seats\"> ' + seat + '</span>';\n        if (this.seatInfo.innerHTML.indexOf(seatString) === -1 && this.seatInfo.innerHTML.indexOf(seatString1) === -1 &&\n            this.seatInfo.innerHTML.indexOf(lastString) === -1) {\n            this.seatInfo.innerHTML += '<span class=\"seats\">' + connector + seat + '</span>';\n        } else {\n            this.seatInfo.innerHTML = this.seatInfo.innerHTML.replace(seatString, '');\n            this.seatInfo.innerHTML = this.seatInfo.innerHTML.replace(seatString1, '');\n            if (this.seatInfo.innerHTML === lastString) {\n                this.seatInfo.innerHTML = '';\n            }\n        }\n    };\n\n    public layers: object[] = [\n        {\n            geometryType: 'Normal',\n            shapeData: seat_selection,\n            shapeSettings: {\n                colorValuePath: 'fill'\n            },\n            selectionSettings: {\n                enable: true,\n                opacity: 1,\n                enableMultiSelect: true,\n                fill : 'green'\n            }\n        }\n    ];\n    ngAfterViewInit() {\n        this.seatInfo = <HTMLDivElement>document.getElementById('selectedseats');\n        document.getElementById('clear-btn').onclick = () => {\n            this.seatInfo.innerHTML = '';\n            let selected: HTMLCollection = document.getElementsByClassName('ShapeselectionMapStyle');\n            for (let i: number = 0, length: number = selected.length; i < length; i++) {\n                selected[0].setAttribute('class', '');\n            }\n        };\n    }\n    // custom code start\n    constructor() {\n        \n    };\n    // custom code end\n\n}","app/app.module.ts":"import {DropDownListModule} from '@syncfusion/ej2-angular-dropdowns';\n\nimport { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { SliderModule, TextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nimport { MapsAllModule } from '@syncfusion/ej2-angular-maps';\n\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from '../app.component';\n\n@NgModule({ declarations: [ AppComponent ], imports: [ MapsAllModule, SliderModule, BrowserModule, FormsModule, TextBoxModule, CheckBoxModule, ButtonModule, DropDownListModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"\n<div class=\"col-lg-9 control-section\">\n    <div style=\"width:200px;margin:auto;padding-bottom:20px\">\n        <img src=\"https://ej2.syncfusion.com/angular/demos/assets/maps/images/bus-icon.png\" style=\"width:25px;height:25px;float:left\">\n        <div style=\"padding-left:30px;font-size:20px;font-weight:400;\">Bus seat selection</div>\n    </div>\n\n    <div style=\"border: 3px solid darkgray;width:200px;display:block;margin:auto;border-radius:5px\">\n        <img src=\"https://ej2.syncfusion.com/angular/demos/assets/maps/images/wheel.png\" style=\"width:30px;height:30px;margin-left:18%;margin-top:10px\">\n\n        <ejs-maps id='container' style=\"display:block;\" projectionType='Equirectangular' [zoomSettings]='zoomSettings' height='400'\n            [layers]='layers' (itemSelection)=\"itemSelection($event)\" (load)=\"load($event)\">\n        </ejs-maps>\n\n    </div>\n</div>\n\n<div class=\"col-lg-3 property-section\">\n    <div class=\"property-panel-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div class=\"property-panel-content\">\n            <table id=\"property\" title=\"Seat Selection\" style=\"width: 100%;font-weight:400 !important\">\n                <tbody>\n                    <tr style=\"height: 30px\">\n                        <td>\n                            <span style=\"float:left;height:15px;width:15px;background-color:gray;border-radius:25%\"></span>\n                            <span id=\"available\" style=\"margin-top:-7px;margin-left: 15px\">Available </span>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 30px\">\n                        <td>\n                            <span style=\"float:left;height:15px;width:15px;background-color:green;border-radius:25%\"></span>\n                            <span id=\"available\" style=\"margin-top:-7px;margin-left: 15px\">Selected </span>\n                        </td>\n                    </tr>\n                    <tr style=\"height: 30px\">\n                        <td>\n                            <span style=\"float:left;height:15px;width:15px;background-color:orange;border-radius:25%\"></span>\n                            <span id=\"available\" style=\"margin-top:-7px;margin-left: 15px\">Booked </span>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n<div id=\"seat-parent\">\n    <span id=\"clear-btn\">Clear Selection</span>\n    <br>\n    <br>\n    <div id=\"selectedseats\"></div>\n</div>\n<!-- custom code start -->\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #seat-parent {\n        text-align: center;\n        cursor: pointer\n    }\n\n    #selectedseats {\n        padding: 10px;\n    }\n\n    #selectedseats,\n    #seat-info {\n        font-size: 14px;\n    }\n\n    #clear-btn {\n        padding: 10px;\n        border: 2px solid rgb(241, 235, 247);\n        border-radius: 8px;\n        background: rgb(246, 245, 248);\n        color: black;\n        font-size: 14px;\n    }\n\n    .seats {\n        padding-top: 15px;\n        font-weight: bold;\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-maps\":\"*\",\"@syncfusion/ej2-angular-maps\":\"*\",\"@syncfusion/ej2-compression\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-file-utils\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}