{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { DialogModule } from '@syncfusion/ej2-angular-popups';\nimport { CheckBoxModule , ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { RadioButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { RichTextEditorAllModule } from '@syncfusion/ej2-angular-richtexteditor';\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\nimport { DatePickerModule } from '@syncfusion/ej2-angular-calendars';\nimport { TabAllModule } from '@syncfusion/ej2-angular-navigations';\nimport { GridAllModule } from '@syncfusion/ej2-angular-grids';\nimport { ChartAllModule, AccumulationChartAllModule, RangeNavigatorAllModule } from '@syncfusion/ej2-angular-charts';\nimport { ScheduleAllModule, RecurrenceEditorAllModule } from '@syncfusion/ej2-angular-schedule';\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {ConfirmDialogArgs, DialogEffect, DialogUtility} from '@syncfusion/ej2-angular-popups'\nimport { DropDownListComponent } from '@syncfusion/ej2-angular-dropdowns';\n\n@Component({\n    standalone: true,\n    imports: [DropDownListModule, RadioButtonModule, CheckBoxModule,  ButtonModule, DialogModule, RadioButtonModule, ChartAllModule, RangeNavigatorAllModule, AccumulationChartAllModule, GridAllModule, RichTextEditorAllModule, ScheduleAllModule, RecurrenceEditorAllModule, CheckBoxModule, FormsModule, ReactiveFormsModule, CommonModule,  TabAllModule, DatePickerModule],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  @ViewChild('animationSample')\n  public animationDropDownObj: DropDownListComponent;\n\n  public effectData: Object[] = [\n    { Id: 'FadeZoom', effect: 'Fade zoom' },\n    { Id: 'SlideBottom', effect: 'Slide bottom' },\n    { Id: 'SlideTop', effect: 'Slide top' },\n    { Id: 'Zoom', effect: 'Zoom' },\n    { Id: 'Fade', effect: 'Fade' }\n];\npublic fields: Object = { text: 'effect', value: 'Id' };\npublic height: string = '220px';\npublic waterMark: string = 'Animation effect';\npublic value: string = 'FadeZoom';\n\n  dialogArgs: ConfirmDialogArgs = {\n    title: ' Delete Multiple Items',\n    content: 'Are you sure you want to permanently delete these items?',\n    animationSettings: { effect: 'Zoom', delay: 0, duration: 400 },\n    position: { X: 'center', Y: 'center' },\n    width: '420px',\n    closeOnEscape: true\n  };\n  public confirmBtnClick = (): void => {\n    DialogUtility.confirm(this.dialogArgs);\n  };\n  public onChange(args: any): void {\n    this.dialogArgs.animationSettings.effect = this.animationDropDownObj.value as DialogEffect;\n  }\n}","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n    <div class=\"col-lg-8\" style=\"min-height:inherit;\">\n        <div id=\"predefinedDialogAnimation\">\n            <!-- Buttons to open the predefined Dialogs -->\n            <button ejs-button cssClass=\"e-success dlgbtn\" #confirmButton (click)=\"confirmBtnClick()\">Confirm</button>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">Properties</div>\n        <div>\n            <ejs-dropdownlist id='effectDropDown' #animationSample [dataSource]='effectData' (change)='onChange($event)' [value]='value' [fields]='fields' floatLabelType='Always' [placeholder]='waterMark' [popupHeight]='height'></ejs-dropdownlist>\n        </div>\n    </div>\n</div>\n","app.component.css":"#predefinedDialogAnimation {\n    margin :  25px 0 0 15px;\n}","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-schedule\":\"*\",\"@syncfusion/ej2-angular-schedule\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-angular-calendars\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}