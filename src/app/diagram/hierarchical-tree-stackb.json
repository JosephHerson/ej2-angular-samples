{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Sample for Hierarchical layout\n */\n\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DiagramComponent, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\nimport {\n    Diagram, NodeModel, ConnectorModel, LayoutAnimation, DataBinding,\n    HierarchicalTree, SnapConstraints, SnapSettingsModel, TextModel, LayoutOrientation\n} from '@syncfusion/ej2-diagrams';\nimport { ChangeEventArgs as CheckBoxChangeEventArgs } from '@syncfusion/ej2-buttons';\nimport { ChangeEventArgs as NumericChangeEventArgs } from '@syncfusion/ej2-inputs';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport {hierarchicalTree} from'./overview-data';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nDiagram.Inject(DataBinding, HierarchicalTree, LayoutAnimation);\n\nexport interface EmployeeInfo {\n    Name: string;\n}\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, NumericTextBoxModule, CheckBoxModule, ]\n})\n\nexport class AppComponent {\n    @ViewChild('diagram')\n    public diagram: DiagramComponent;\n\n    public data: Object = {\n        //sets the fields to bind\n        id: 'Name', parentId: 'Category',\n        dataSource: new DataManager(hierarchicalTree),\n        //binds the data with the nodes\n        doBinding: (nodeModel: NodeModel, data: object, diagram: Diagram) => {\n            nodeModel.shape = { type: 'Text', content: (data as EmployeeInfo).Name };\n        }\n    };\n\n    public snapSettings: SnapSettingsModel = { constraints: SnapConstraints.None };\n\n    public layout: Object = {\n        type: 'HierarchicalTree', verticalSpacing: 30, horizontalSpacing: 40,\n        enableAnimation: true\n    };\n\n    //Defines the default node and connector properties\n    public nodeDefaults(obj: NodeModel): NodeModel {\n        obj.style = { fill: '#659be5', strokeColor: 'none', color: 'white', strokeWidth: 2 };\n        obj.borderColor = '#3a6eb5';\n        obj.backgroundColor = '#659be5';\n        (obj.shape as TextModel).margin = { left: 5, right: 5, bottom: 5, top: 5 };\n        obj.expandIcon = { height: 10, width: 10, shape: 'None', fill: 'lightgray', offset: { x: .5, y: 1 } };\n        obj.expandIcon.verticalAlignment = 'Auto';\n        obj.expandIcon.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        obj.collapseIcon.offset = { x: .5, y: 1 };\n        obj.collapseIcon.verticalAlignment = 'Auto';\n        obj.collapseIcon.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        obj.collapseIcon.height = 10;\n        obj.collapseIcon.width = 10;\n        obj.collapseIcon.padding.top = 5;\n        obj.collapseIcon.shape = 'None';\n        obj.collapseIcon.fill = 'lightgray';\n        return obj;\n    };\n\n    public connDefaults(connector: any, diagram: Diagram): ConnectorModel {\n        connector.targetDecorator.shape = 'None';\n        connector.type = 'Orthogonal';\n        connector.constraints = 0;\n        connector.cornerRadius = 5;\n        connector.style.strokeColor = '#6d6d6d';\n        return connector;\n    }\n\n    ngOnInit(): void {\n        document.getElementById('appearance').onclick = this.documentClick.bind(this);\n    }\n\n    public documentClick(args: MouseEvent): void {\n        let target: HTMLElement = args.target as HTMLElement;\n        // custom code start\n        let selectedElement: HTMLCollection = document.getElementsByClassName('e-selected-style');\n        if (selectedElement.length) {\n            selectedElement[0].classList.remove('e-selected-style');\n        }\n        // custom code end\n        if (target.className === 'image-pattern-style') {\n            let id: string = target.id;\n            let orientation1: string = id.substring(0, 1).toUpperCase()+id.substring(1,id.length);\n            this.diagram.layout.orientation = orientation1 as LayoutOrientation;\n            this.diagram.layout.orientation = orientation1 as LayoutOrientation;\n            this.diagram.doLayout();\n            // custom code start\n            target.classList.add('e-selected-style');\n            // custom code end\n            this.diagram.dataBind();\n        }\n    };\n\n    onhSpacingChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.horizontalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    }\n\n    onvSpacingChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.verticalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    }\n\n    onExpandChange(args: CheckBoxChangeEventArgs): void {\n        for (let node of this.diagram.nodes) {\n            if (args.checked) {\n                node.expandIcon.shape = 'Minus';\n                node.collapseIcon.shape = 'Plus';\n            } else {\n                node.expandIcon.shape = 'None';\n                node.collapseIcon.shape = 'None';\n            }\n        }\n        this.diagram.dataBind();\n        this.diagram.doLayout();\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    .diagram-hierarchical-tree .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 75px;\n        width: calc((100% - 12px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-hierarchical-tree .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-hierarchical-tree .sb-child-row {\n        padding-top: 8px;\n    }\n    \n    .diagram-hierarchical-tree .row-header {\n        font-size: 13px;\n        font-weight: 500;\n    }\n    \n    \n    .diagram-hierarchical-tree .e-selected-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    \n    .diagram-hierarchical-tree .col-xs-6 {\n        padding-left: 0px;\n        padding-right: 0px;\n    }\n</style>\n<div class=\"control-section diagram-hierarchical-tree\">\n    <div class=\"col-lg-8\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"400px\" [getConnectorDefaults]='connDefaults' [getNodeDefaults]='nodeDefaults' [layout]='layout' [dataSourceSettings]='data' [snapSettings]='snapSettings'>\n            </ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\">\n            <div class=\"row row-header sb-child-row\">\n                Appearance\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style e-selected-style\" id=\"topToBottom\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/toptobottom.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"bottomToTop\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/bottomtotop.png);margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"leftToRight\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/lefttoright.png); margin: 0px 3px\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"rightToLeft\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/righttoleft.png); margin: 0px 3px\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n            <div class=\"row row-header sb-child-row\">\n                Behavior\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px;\" class=\"col-xs-6\">\n                    <div style=\"display: table-cell; vertical-align: middle\">Horizontal Spacing</div>\n                </div>\n                <div class=\"col-xs-6\">\n                    <ejs-numerictextbox #diagram id='hSpacing' style=\"width: 90px\" min=\"20\" max=\"60\" step=\"2\" value=\"40\" (change)='onhSpacingChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px;\" class=\"col-xs-6\">\n                    <div style=\"display: table-cell; vertical-align: middle\">Vertical Spacing</div>\n                </div>\n                <div class=\"col-xs-6\">\n                    <ejs-numerictextbox #diagram id='vSpacing' style=\"width: 90px\" min=\"20\" max=\"60\" step=\"2\" value=\"30\" (change)='onvSpacingChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <ejs-checkbox #diagram id=\" checked \" label=\"Expandable \" [checked]=\"false \" (change)=\"onExpandChange($event) \"></ejs-checkbox>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}