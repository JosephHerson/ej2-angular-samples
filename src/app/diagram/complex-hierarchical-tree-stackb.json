{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DiagramComponent, LineDistribution, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\nimport {\n    NodeModel, ConnectorModel, DiagramTools, Diagram, DataBinding, ComplexHierarchicalTree,\n    SnapConstraints, SnapSettingsModel, LayoutModel, LayoutOrientation,ConnectionPointOrigin\n} from '@syncfusion/ej2-diagrams';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { ChangeEventArgs as NumericChangeEventArgs } from '@syncfusion/ej2-inputs';\nimport {multiParentData} from'./overview-data';\nimport { ChangeEventArgs as CheckBoxChangeEventArgs } from '@syncfusion/ej2-buttons';\n\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nDiagram.Inject(DataBinding, ComplexHierarchicalTree,LineDistribution);\n\nexport interface DataInfo {\n    [key: string]: string;\n}\n\n/**\n * Sample for Multiple parent sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, NumericTextBoxModule, CheckBoxModule, ]\n})\n\nexport class AppComponent {\n    @ViewChild('diagram')\n    public diagram: DiagramComponent;\n\n    public nodeDefaults(obj: NodeModel): NodeModel {\n        obj.width = 40; obj.height = 40;\n        //Initialize shape\n        obj.shape = { type: 'Basic', shape: 'Rectangle', cornerRadius: 7 };\n        return obj;\n    };\n    public data: Object = {\n        id: 'Name', parentId: 'ReportingPerson',\n        dataSource: new DataManager(multiParentData),\n        //binds the external data with node\n        doBinding: (nodeModel: NodeModel, data: DataInfo, diagram: Diagram) => {\n            /* tslint:disable:no-string-literal */\n            nodeModel.style = { fill: data['fillColor'], strokeWidth: 1, strokeColor: data['border'] };\n        }\n    };\n    public created(): void {\n        this.diagram.fitToPage();\n    };\n    public connDefaults(connector: ConnectorModel): void {\n        connector.type = 'Orthogonal';\n        connector.cornerRadius = 7;\n        connector.targetDecorator.height = 7;\n        connector.targetDecorator.width = 7;\n        connector.style.strokeColor = '#6d6d6d';\n    };\n\n    public tool: DiagramTools = DiagramTools.ZoomPan;\n\n    public snapSettings: SnapSettingsModel = { constraints: SnapConstraints.None };\n\n    public layout: LayoutModel = {\n        type: 'ComplexHierarchicalTree',\n        connectionPointOrigin:ConnectionPointOrigin.DifferentPoint,\n        horizontalSpacing: 40, verticalSpacing: 40, orientation: 'TopToBottom',\n        margin: { left: 10, right: 0, top: 50, bottom: 0 }\n    };\n\n    ngOnInit(): void {\n        document.getElementById('appearance').onclick = this.documentClick.bind(this);\n    }\n    public onChange(args: CheckBoxChangeEventArgs): void {\n        if (args.checked) {\n            this.diagram.layout.connectionPointOrigin = ConnectionPointOrigin.DifferentPoint;\n             }\n             else {\n                this.diagram.layout.connectionPointOrigin = ConnectionPointOrigin.SamePoint;\n             }\n         \n    }\n    public documentClick(args: MouseEvent): void {\n        let target: HTMLElement = args.target as HTMLElement;\n        // custom code start\n        let selectedElement: HTMLCollection = document.getElementsByClassName('e-selected-style');\n        if (selectedElement.length) {\n            selectedElement[0].classList.remove('e-selected-style');\n        }\n        // custom code end\n        if (target.className === 'image-pattern-style') {\n            let id: string = target.id;\n            let orientation1: string = id.substring(0, 1).toUpperCase() + id.substring(1, id.length);\n            this.diagram.layout.orientation = orientation1 as LayoutOrientation;\n            this.diagram.layout.orientation = orientation1 as LayoutOrientation;\n            this.diagram.doLayout();\n            // custom code start\n            target.classList.add('e-selected-style');\n            // custom code end\n            this.diagram.dataBind();\n        }\n    };\n\n    public onMarginLeftChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.margin.left = args.value;\n        this.diagram.dataBind();\n    }\n\n    public onMarginTopChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.margin.top = args.value;\n        this.diagram.dataBind();\n    }\n\n    public onhSpacingChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.horizontalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    }\n\n    public onvSpacingChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.verticalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    }\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    .diagram-complex-hierarchical-tree .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 75px;\n        width: calc((100% - 18px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-complex-hierarchical-tree .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-complex-hierarchical-tree .sb-child-row {\n        padding-top: 8px;\n    }\n    \n    .diagram-complex-hierarchical-tree .row-header {\n        font-size: 15px;\n        font-weight: 500;\n    }\n    \n    .diagram-complex-hierarchical-tree .e-selected-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    \n    .diagram-complex-hierarchical-tree .e-checkbox-wrapper .e-label {\n        font-size: 12px;\n    }\n    \n    .diagram-complex-hierarchical-tree .col-xs-6 {\n        padding-left: 0px;\n        padding-right: 0px;\n    }\n</style>\n\n<div class=\"control-section diagram-complex-hierarchical-tree\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"580px\" [getConnectorDefaults]='connDefaults' [getNodeDefaults]='nodeDefaults' [tool]='tool' [layout]='layout' [dataSourceSettings]='data' [snapSettings]='snapSettings' \n (created)=\"created()\"></ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">\n            Layout Settings\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\" style=\"padding-top: 10px\">\n            <div class=\"row row-header sb-child-row\">\n                Orientation\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style  e-selected-style\" id=\"topToBottom\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/toptobottom.png); margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"bottomToTop\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/bottomtotop.png);margin-right: 3px\">\n                </div>\n                <div class=\"image-pattern-style\" id=\"leftToRight\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/lefttoright.png);  margin: 0px 3px\">\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div class=\"image-pattern-style\" id=\"rightToLeft\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/righttoleft.png); margin: 0px 3px\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n            <div class=\"row row-header sb-child-row\">\n                Behavior\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px; padding-left: 0px \" class=\"col-xs-5 \">\n                    <div style=\"display: table-cell; vertical-align: middle \">Margin X</div>\n                </div>\n                <div class=\"col-xs-7 \">\n                    <ejs-numerictextbox id='mleft' [value]=\"10\" format='n0' step=\"1\" (change)='onMarginLeftChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px; padding-left: 0px \" class=\"col-xs-5 \">\n                    <div style=\"display: table-cell; vertical-align: middle \">Margin Y</div>\n                </div>\n                <div class=\"col-xs-7 \">\n                    <ejs-numerictextbox id='mtop' [value]=\"50\" format='n0' step=\"1\" (change)='onMarginTopChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px; padding-left: 0px \" class=\"col-xs-5 \">\n                    <div style=\"display: table-cell; vertical-align: middle \">Horizontal Spacing</div>\n                </div>\n                <div class=\"col-xs-7 \">\n                    <ejs-numerictextbox id='hspace' [value]=\"40\" format='n0' step=\"1\" (change)='onhSpacingChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px; padding-left: 0px \" class=\"col-xs-5 \">\n                    <div style=\"display: table-cell; vertical-align: middle \">Vertical Spacing</div>\n                </div>\n                <div class=\"col-xs-7 \">\n                    <ejs-numerictextbox id='vspace' [value]=\"40\" format='n0' step=\"1\" (change)='onvSpacingChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n                <div class=\"row sb-child-row\">\n                    <ejs-checkbox #diagram id=\"lock\" label=\"Prevent Connector Overlapping\" [checked]=\"true\" (change)=\"onChange($event)\"></ejs-checkbox>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}