{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChangeEventArgs as NumericChangeEventArgs } from '@syncfusion/ej2-inputs';\nimport { DiagramComponent, Diagram, NodeModel, ConnectorModel, LayoutOrientation, LayoutAnimation, TreeInfo, SnapSettingsModel, SubTreeOrientation, SubTreeAlignments, DiagramTools, Node, DataBinding, HierarchicalTree, SnapConstraints, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport {localBindData} from'./overview-data';\n\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nDiagram.Inject(DataBinding, HierarchicalTree, LayoutAnimation);\n\nexport interface EmployeeInfo {\n    Role: string;\n    color: string;\n}\nexport interface DataInfo {\n    [key: string]: string;\n}\n\n/**\n * Sample for Organizational Chart\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, NumericTextBoxModule, ]\n})\nexport class AppComponent {\n    @ViewChild('diagram')\n    public diagram: DiagramComponent;\n    public snapSettings: SnapSettingsModel = { constraints: SnapConstraints.None };\n    public tool: DiagramTools = DiagramTools.ZoomPan;\n    public data: Object = {\n        id: 'Id', parentId: 'Manager',\n        dataSource: new DataManager(localBindData),\n        doBinding: (nodeModel: NodeModel, data: object, diagram: Diagram) => {\n            nodeModel.shape = {\n                type: 'Text', content: (data as EmployeeInfo).Role,\n                margin: { left: 10, right: 10, top: 10, bottom: 10 }\n            };\n        }\n    };\n    public layout: Object = {\n        type: 'OrganizationalChart',\n        getLayoutInfo: (node: Node, options: TreeInfo) => {\n            /* tslint:disable:no-string-literal */\n            if ((node.data as DataInfo)['Role'] === 'General Manager') {\n                options.assistants.push(options.children[0]);\n                options.children.splice(0, 1);\n            }\n            if (!options.hasSubTree) {\n                options.type = 'Right';\n            }\n        }\n    };\n\n    //Defines the default node and connector properties\n    public nodeDefaults(obj: NodeModel): NodeModel {\n        obj.backgroundColor = (obj.data as EmployeeInfo).color;\n        obj.style = { fill: 'none', strokeColor: 'none', color: 'white' };\n        obj.expandIcon = { height: 10, width: 10, shape: 'None', fill: 'lightgray', offset: { x: .5, y: 1 } };\n        obj.expandIcon.verticalAlignment = 'Center';\n        obj.expandIcon.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        obj.collapseIcon.offset = { x: .5, y: 1 };\n        obj.collapseIcon.verticalAlignment = 'Center';\n        obj.collapseIcon.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        obj.collapseIcon.height = 10;\n        obj.collapseIcon.width = 10;\n        obj.collapseIcon.shape = 'None';\n        obj.collapseIcon.fill = 'lightgray';\n        obj.width = 120;\n        obj.height = 30;\n        return obj;\n    };\n    public connDefaults(connector: any, diagram: Diagram): ConnectorModel {\n        connector.targetDecorator.shape = 'None';\n        connector.type = 'Orthogonal';\n        connector.constraints = 0;\n        connector.cornerRadius = 0;\n        return connector;\n    }\n    ngOnInit(): void {\n        document.getElementById('pattern').onclick = this.documentClick.bind(this);\n        document.getElementById('orientation').onclick =\n          this.orientation.bind(this);\n    }\n     //To change orientation\n     private orientation(args: any) {\n      debugger\n        let target: HTMLElement = args.target as HTMLElement;\n        let selectedElement: HTMLCollection = document.getElementsByClassName(\n          'e-selected-orientation-style'\n        );\n        if (selectedElement.length) {\n          selectedElement[0].classList.remove('e-selected-orientation-style');\n        }\n        if (!target.classList.contains('e-selected-orientation-style')) {\n          target.classList.add('e-selected-orientation-style');\n        }\n        if (\n          target.className === 'image-pattern-style e-selected-orientation-style'\n        ) {\n          let id: string = target.id;\n          let orientation1: string =\n            id.substring(0, 1).toUpperCase() + id.substring(1, id.length);\n          this.diagram.layout.orientation = orientation1 as LayoutOrientation;\n          this.diagram.dataBind();\n          this.diagram.doLayout();\n        }\n      }\n    //To change subtree alignment\n    private documentClick(args: MouseEvent): void {\n      debugger\n        let target: HTMLElement = args.target as HTMLElement;\n        var selectedpatternElement = document.getElementsByClassName(\n          'e-selected-pattern-style'\n        );\n        if (selectedpatternElement.length) {\n          selectedpatternElement[0].classList.remove('e-selected-pattern-style');\n        }\n        if (!target.classList.contains('e-selected-pattern-style')) {\n          target.classList.add('e-selected-pattern-style');\n        }\n        if (target.className === 'image-pattern-style e-selected-pattern-style') {\n          let subTreeOrientation: SubTreeOrientation;\n          let subTreeAlignment: SubTreeAlignments;\n          switch (target.id) {\n            case 'pattern1':\n              subTreeOrientation = 'Vertical';\n              subTreeAlignment = 'Alternate';\n              break;\n            case 'pattern2':\n              subTreeOrientation = 'Vertical';\n              subTreeAlignment = 'Left';\n              break;\n            case 'pattern3':\n              subTreeOrientation = 'Vertical';\n              subTreeAlignment = 'Left';\n              break;\n              case 'pattern4':\n              subTreeOrientation = 'Vertical';\n              subTreeAlignment = 'Right';\n              break;\n            case 'pattern5':\n              subTreeOrientation = 'Vertical';\n              subTreeAlignment = 'Right';\n              break;\n            case 'pattern6':\n              subTreeOrientation = 'Horizontal';\n              subTreeAlignment = 'Balanced';\n              break;\n            case 'pattern7':\n              subTreeOrientation = 'Horizontal';\n              subTreeAlignment = 'Center';\n              break;\n            case 'pattern8':\n              subTreeOrientation = 'Horizontal';\n              subTreeAlignment = 'Left';\n              break;\n            case 'pattern9':\n              subTreeOrientation = 'Horizontal';\n              subTreeAlignment = 'Right';\n              break;\n          }\n    \n          this.diagram.layout.getLayoutInfo = (\n            node: NodeModel,\n            options: TreeInfo\n          ) => {\n            if (target.id === 'pattern4' || target.id === 'pattern3') {\n              options.offset = -50;\n            }\n            if ((node.data as DataInfo)['Role'] === 'General Manager') {\n              options.assistants.push(options.children[0]);\n              options.children.splice(0, 1);\n            }\n            if (!options.hasSubTree) {\n              options.orientation = subTreeOrientation;\n              options.type = subTreeAlignment;\n            }\n          };\n          this.diagram.dataBind();\n          this.diagram.doLayout();\n        }\n      }\n\n    public onhSpacingChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.horizontalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    }\n\n    public onvSpacingChange(args: NumericChangeEventArgs): void {\n        this.diagram.layout.verticalSpacing = Number(args.value);\n        this.diagram.dataBind();\n    }\n\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    .diagram-organizationalchart .image-pattern-style {\n        background-color: white;\n        background-size: contain;\n        background-repeat: no-repeat;\n        height: 75px;\n        width: calc((100% - 18px) / 3);\n        cursor: pointer;\n        border: 1px solid #D5D5D5;\n        background-position: center;\n        float: left;\n    }\n    \n    .diagram-organizationalchart .row {\n        margin-left: 0px;\n        margin-right: 0px;\n    }\n    \n    .diagram-organizationalchart .row-header {\n        font-size: 15px;\n        font-weight: 500;\n    }\n    \n    .diagram-organizationalchart .sb-child-row {\n        padding-top: 8px;\n    }\n    \n    .diagram-organizationalchart .row-header1 {\n        font-size: 12px;\n        padding-left: 2px;\n        font-weight: 400;\n    }\n    \n    .diagram-organizationalchart .e-selected-orientation-style {\n        border-color: #006CE6;\n        border-width: 2px;\n    }\n    .diagram-organizationalchart .e-selected-pattern-style {\n       border-color: #006CE6;\n       border-width: 2px;\n   }\n   .image-pattern-style:hover {\n            border-color: gray;\n            border-width: 2px;\n        }\n    \n    .diagram-organizationalchart .col-xs-6 {\n        padding-left: 0px;\n        padding-right: 0px;\n    }\n</style>\n<div class=\"control-section diagram-organizationalchart\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"700px\" [getConnectorDefaults]='connDefaults' [getNodeDefaults]='nodeDefaults' [layout]='layout' [dataSourceSettings]='data' [tool]='tool' [snapSettings]='snapSettings'>\n            </ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <div class=\"row property-panel-content\" id=\"appearance\">\n            <div class=\"row\" style=\"padding-top: 10px\">\n                <div class=\"row row-header sb-child-row\">\n                    Orientation\n                </div>\n                <div id=\"orientation\">\n                <div class=\"row sb-child-row\">\n                    <div class=\"image-pattern-style e-selected-orientation-style\" id=\"topToBottom\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/toptobottom.png); margin-right: 3px\">\n                    </div>\n                    <div class=\"image-pattern-style\" id=\"bottomToTop\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/bottomtotop.png); margin: 0px 3px\">\n                    </div>\n                    <div class=\"image-pattern-style\" id=\"leftToRight\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/lefttoright.png); margin-right:0px 3px\">\n                    </div>\n                </div>\n                <div class=\"row sb-child-row\">\n                    <div class=\"image-pattern-style\" id=\"rightToLeft\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/Images/common-orientation/righttoleft.png); margin: 0px 3px\">\n                    </div>\n                </div>\n                </div>\n                <div class=\"row row-header sb-child-row\">\n                    Subtree Alignment\n                </div>\n                <div id=\"pattern\">\n                <div class=\"row sb-child-row\">\n                    <div class=\"image-pattern-style\" id=\"pattern1\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_1.png); margin-right: 3px\">\n                    </div>\n                    <div class=\"image-pattern-style\" id=\"pattern2\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_2.png); margin: 0px 3px\">\n                    </div>\n                    <div class=\"image-pattern-style\" id=\"pattern3\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_3.png); margin: 0px 3px\">\n                    </div>\n                </div>\n                <div class=\"row sb-child-row\">\n                    <div class=\"image-pattern-style\" id=\"pattern4\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_4.png); margin-right: 3px\">\n                    </div>\n                    <div class=\"image-pattern-style e-selected-pattern-style\" id=\"pattern5\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_5.png); margin: 0px 3px\">\n                    </div>\n                    <div class=\"image-pattern-style\" id=\"pattern6\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_6.png); margin: 0px 3px\">\n                    </div>\n                </div>\n                <div class=\"row sb-child-row\">\n                    <div class=\"image-pattern-style\" id=\"pattern7\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_7.png); margin-right: 3px\">\n                    </div>\n                    <div class=\"image-pattern-style\" id=\"pattern8\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_8.png); margin: 0px 3px\">\n                    </div>\n                    <div class=\"image-pattern-style\" id=\"pattern9\" style=\"background-image: url(https://ej2.syncfusion.com/angular/demos/assets/diagram/patternimages/Pattern_9.png); margin: 0px 3px\">\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>\n        <div class=\"row property-panel-content\" style=\"padding-top: 10px\">\n            <div class=\"row row-header sb-child-row\">\n                Behavior\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px;\" class=\"col-xs-6\">\n                    <div style=\"display: table-cell; vertical-align: middle\">Horizontal Spacing</div>\n                </div>\n                <div class=\"col-xs-6\">\n                    <ejs-numerictextbox #diagram id='hspace' min=\"20\" max=\"60\" step=\"2\" value=\"30\" (change)='onhSpacingChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n            <div class=\"row sb-child-row\">\n                <div style=\"display: table;height: 35px;\" class=\"col-xs-6\">\n                    <div style=\"display: table-cell; vertical-align: middle\">Vertical Spacing</div>\n                </div>\n                <div class=\"col-xs-6\">\n                    <ejs-numerictextbox #diagram id='vSpacing' min=\"20\" max=\"60\" step=\"2\" value=\"30\" (change)='onvSpacingChange($event)'></ejs-numerictextbox>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-splitbuttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}