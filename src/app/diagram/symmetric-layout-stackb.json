{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { DiagramComponent, Node, NodeModel, SnapConstraints, Diagram, ConnectorModel, SnapSettingsModel, DataBinding, BasicShapeModel, SymmetricLayout, DiagramTools, DiagramModule } from '@syncfusion/ej2-angular-diagrams';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport  {symmetricData} from'./overview-data';\n\nimport { ButtonModule } from '@syncfusion/ej2-angular-buttons';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\n\nDiagram.Inject(DataBinding, SymmetricLayout);\n\n/**\n * Sample for Symmetric layout\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ DiagramModule, NumericTextBoxModule, ButtonModule, ]\n})\nexport class AppComponent {\n  @ViewChild('diagram') public diagram: DiagramComponent;\n\n  public springlength: number = 80;\n  public springfactor: number = 0.8;\n  public maxiteration: number = 500;\n\n  public nodeDefaults(obj: NodeModel): NodeModel {\n    obj.height = 20;\n    obj.width = 20;\n    obj.style = { fill: 'transparent', strokeWidth: 2 };\n    return obj;\n  }\n\n  public connDefaults(obj: ConnectorModel): void {\n    obj.targetDecorator.shape = 'None';\n    obj.type = 'Straight';\n  }\n\n  public setNodeTemplate(obj: Node, diagram: Diagram): void {\n    let shape: BasicShapeModel = { type: 'Basic', shape: 'Ellipse' };\n    if (\n      !(obj.data as EmployeeInfo).Type ||\n      (obj.data as EmployeeInfo).Type === 'Server'\n    ) {\n      obj.width = 30;\n      obj.height = 30;\n      obj.shape = {\n        type: 'Native',\n        content:\n          '<svg width=\"50\" height=\"65\"><g id=\"Server2_shape\" fill=\"transparent\" stroke=\"transparent\" stroke-width=\"1\"' +\n          ' opacity=\"1\" stroke-dasharray=\"\" transform=\"translate(-15.517241379310343,-2.6329421835819375),' +\n          'scale(1.7241379310344827,1.3774530437803194)\" width=\"50\" height=\"65\"><g><g xmlns=\"http://www.w3.org/2000/svg\">' +\n          '<polygon fill=\"#DBD5DA\" points=\"37.3,7.3 19.4,17.8 9.8,12.1 9.2,12.9 19,18.7 19,49 20,49 20,18.5 37.8,8.1  \">' +\n          '</polygon>    <polygon fill=\"#E5DCE1\" points=\"36.3,7.8 28.2,2.6 10.5,12.5 19.5,17.8  \"></polygon> <polygon' +\n          ' fill=\"#BBB5B9\" points=\"20,18.5 37,8.6 36.9,38.4 20,47.9  \"></polygon> <polygon fill=\"#DBD2D7\" ' +\n          'points=\"10,13.4 19,18.7 19,48.2 10,42.7  \"></polygon>    <path fill=\"#656666\" d=\"M19.2,49.1c-0.5,' +\n          '0-0.9-0.1-1.3-0.4L10.2,44C9.4,43.5,9,42.7,9,41.8V13.6c0-0.9,0.5-1.7,1.3-2.2l16.7-9.2   c0.8-0.4,1.8-0.4,' +\n          '2.5,0.1L36.8,7C37.6,7.5,38,8.2,38,9.1l-0.1,28.4c0,0.9-0.5,1.7-1.3,2.2l-16.2,9.1C20.1,49,19.6,49.1,19.2,49.1z ' +\n          'M28.1,2.9c-0.3,0-0.5,0.1-0.7,0.2l-16.6,9.2c-0.5,0.3-0.8,0.8-0.8,1.3v28.2c0,0.5,0.3,1,0.7,1.3l7.7,4.8c0.5,0.3,' +\n          '1.1,0.3,1.5,0  l16.2-9.1c0.5-0.3,0.8-0.8,0.8-1.3L37,9.1c0-0.5-0.3-1-0.7-1.3L29,3.2C28.7,3,28.4,2.9,28.1,2.9z\">' +\n          '</path><ellipse fill=\"#656666\"  cx=\"14.3\" cy=\"40.2\" rx=\"0.6\" ry=\"1.1\"></ellipse> <polygon fill=\"#656666\" ' +\n          'points=\"10.9,22.6 10.9,22.6 10.9,22.6  \"></polygon> <polygon fill=\"#656666\" class=\"st4ed\" points=\"11.9,' +\n          '22 11.9,23.2 16.7,26 16.7,24.9 \"></polygon><polygon fill=\"#656666\" points=\"10.9,18.9 10.9,18.9 10.9,18.9\"></polygon>' +\n          '<polygon fill=\"#656666\" points=\"11.9,18.4 11.9,19.5 16.7,22.4 16.7,21.2  \"></polygon></g></g></g></svg>'\n      };\n    } else {\n      obj.shape = shape;\n      obj.style = { fill: 'orange' };\n    }\n  }\n\n  public tool: DiagramTools = DiagramTools.ZoomPan;\n  public snapSettings: SnapSettingsModel = { constraints: SnapConstraints.None };\n\n  public data: Object = { id: 'Id', parentId: 'Source', dataSource: new DataManager(symmetricData) };\n  public layout: Object = {\n    type: 'SymmetricalLayout', springLength: 80, springFactor: 0.8, maxIteration: 500, margin: { left: 20, top: 20 }\n  };\n  public btnClick(args: MouseEvent): void {\n    this.diagram.layout.springLength = this.springlength;\n    this.diagram.layout.springFactor = this.springfactor;\n    this.diagram.layout.maxIteration = this.maxiteration;\n    this.diagram.dataBind();\n  }\n}\n\nexport interface EmployeeInfo {\n  Type: string;\n}\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<style>\n    @media (max-width: 550px) {\n        .diagram-symmetric-layout #property {\n            margin-left: 20px;\n            margin-right: 20px;\n            margin-top: 12px;\n        }\n    }\n</style>\n<div class=\"control-section diagram-symmetric-layout\">\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <ejs-diagram #diagram id=\"diagram\" width=\"100%\" height=\"500px\" [getConnectorDefaults]=connDefaults [getNodeDefaults]=nodeDefaults\n                [tool]=tool [layout]='layout' [dataSourceSettings]='data' [setNodeTemplate]=setNodeTemplate [snapSettings]=snapSettings>\n            </ejs-diagram>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <div class=\"property-panel-header\">\n            Properties\n        </div>\n        <table id=\"property\" title=\"Properties\">\n            <tr>\n                <td style=\"width:30%;\"> Spring Length </td>\n                <td style=\"width: 60%\">\n                    <ejs-numerictextbox #diagram id=\"springlength\" [(value)]=\"springlength\" step=\"1\" format='###.##' [min]=\"0\"></ejs-numerictextbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width:30%;\">Spring Factor</td>\n                <td style=\"width: 60%\">\n                    <ejs-numerictextbox #diagram id=\"springfactor\" [(value)]=\"springfactor\" step=\"0.1\" format='###.##' [min]=\"0\" [max]=\"3.5\"></ejs-numerictextbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width:30%;\">Maximum Iteration</td>\n                <td style=\"width: 60%\">\n                    <ejs-numerictextbox #diagram id=\"maxiteration\" [(value)]=\"maxiteration\" step=\"1\" format='###.##' [min]=\"0\"></ejs-numerictextbox>\n                </td>\n            </tr>\n            <tr>\n                <td style=\"width: 50%\"></td>\n                <td style=\"width: 50%; padding-top:10px\">\n                    <div class=\"col-xs-12 col-sm-12 col-lg-6 col-md-6\">\n                        <button ejs-button cssClass=\"e-small\" (click)=\"btnClick($event)\">Refresh</button>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>","app.component.css":".control-fluid {\n    padding: 0px !important;\n}","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-diagrams\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-diagrams\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}