{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"/**\n * Rich Text Editor Mention integration Functionality Sample\n */\nimport { Component, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\nimport { DialogType, ToolbarService, NodeSelection, LinkService, ImageService, RichTextEditorModule, PasteCleanupService, VideoService, AudioService, FormatPainterService, TableService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { RichTextEditorComponent, HtmlEditorService, QuickToolbarService, EmojiPickerService } from '@syncfusion/ej2-angular-richtexteditor';\nimport { Dialog, ButtonPropsModel } from '@syncfusion/ej2-popups';\nimport { Mention, SelectEventArgs } from '@syncfusion/ej2-dropdowns';\n\nimport { MentionModule } from '@syncfusion/ej2-angular-dropdowns';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ToolbarService, LinkService, ImageService, QuickToolbarService, HtmlEditorService, EmojiPickerService, PasteCleanupService, VideoService, AudioService, FormatPainterService, TableService ],\n    standalone: true,\n    imports: [ RichTextEditorModule, MentionModule, ]\n})\nexport class AppComponent {\n\n    @ViewChild('MentionInlineFormat')\n    private rteObj: RichTextEditorComponent;\n\n    @ViewChild('Mention')\n    private mentionObj: Mention;\n\n    public selection: NodeSelection = new NodeSelection();\n    public saveSelection: NodeSelection;\n\n    public data: { [key: string]: Object }[] = [\n        { formatName: \"Text\", command: \"P\", formatType: \"Basic blocks\", icon: \"e-btn-icon e-text e-icons\", description: \"Writing with paragraphs\" },\n        { formatName: \"Quotation\", command: \"BlockQuote\", formatType: \"Basic blocks\", icon: \"e-icons block-view\", description: \"Insert a quote or citation\" },\n        { formatName: \"Heading 1\", command: \"H1\", formatType: \"Basic blocks\", icon: \"e-icons h1-view\", description: \"Use this for a top level heading\" },\n        { formatName: \"Heading 2\", command: \"H2\", formatType: \"Basic blocks\", icon: \"e-icons h2-view\", description: \"Use this for key sections\" },\n        { formatName: \"Heading 3\", command: \"H3\", formatType: \"Basic blocks\", icon: \"e-icons h3-view\", description: \"Use this for sub sections and group headings\" },\n        { formatName: \"Heading 4\", command: \"H4\", formatType: \"Basic blocks\", icon: \"e-icons h4-view\", description: \"Use this for deep headings\" },\n        { formatName: \"Numbered list\", command: \"OL\", formatType: \"Basic blocks\", icon: \"e-icons e-list-ordered icon\", description: \"Create an ordered list\" },\n        { formatName: \"Bulleted list\", command: \"UL\", formatType: \"Basic blocks\", icon: \"e-icons e-list-unordered icon\", description: \"Create an unordered list\" },\n        { formatName: \"Table\", command: \"CreateTable\", formatType: \"Basic blocks\", icon: \"e-icons e-table icon\", description: \"Insert a table\" },\n        { formatName: \"Emoji picker\", command: \"EmojiPicker\", formatType: \"Inline\", icon: \"e-icons e-emoji icon\", description: \"Use emojis to express ideas and emoticons\" },\n        { formatName: \"Image\", command: \"Image\", formatType: \"Media\", icon: \"e-icons e-image icon\", description: \"Add image to your page\" },\n        { formatName: \"Audio\", command: \"Audio\", formatType: \"Media\", icon: \"e-icons e-audio icon\", description: \"Add audio to your page\" },\n        { formatName: \"Video\", command: \"Video\", formatType: \"Media\", icon: \"e-icons e-video icon\", description: \"Add video to your page\" },\n    ];\n    public fieldsData: { [key: string]: string } = { text: 'formatName', groupBy: 'formatType' };\n\n    public tools: ToolbarModule = {\n        items: ['Bold', 'Italic', 'Underline', 'StrikeThrough', 'SuperScript', 'SubScript', '|',\n            'FontName', 'FontSize', 'FontColor', 'BackgroundColor', '|',\n            'LowerCase', 'UpperCase', '|',\n            'Formats', 'Alignments', 'Blockquote', '|', 'NumberFormatList', 'BulletFormatList', '|',\n            'Outdent', 'Indent', '|', 'CreateLink', 'Image', 'Video', 'Audio', 'CreateTable', '|', 'FormatPainter', 'ClearFormat',\n            '|', 'EmojiPicker', '|',\n            'SourceCode', '|', 'Undo', 'Redo']\n    };\n\n    onActionBegin(args) {\n        if (args.requestType === 'EnterAction') {\n            if (this.mentionObj.element.classList.contains('e-popup-open')) {\n                args.cancel = true;\n            }\n        }\n    }\n\n    public beforeApplyFormat(isBlockFormat: Boolean): void {\n        let currentRange: Range = this.rteObj.getRange();\n        let node: Node = this.rteObj.formatter.editorManager.nodeSelection.getNodeCollection(currentRange)[0];         \n        let startPoint = currentRange.startOffset;\n        while(this.rteObj.formatter.editorManager.nodeSelection.getRange(document).toString().indexOf(\"/\") ==-1 ){\n            this.rteObj.formatter.editorManager.nodeSelection.setSelectionText(document, node, node, startPoint, currentRange.endOffset);\n            startPoint--;\n        }\n        let slashRange: Range = this.rteObj.getRange();\n        let slashNode: Node = this.rteObj.formatter.editorManager.nodeCutter.GetSpliceNode(slashRange, node as HTMLElement);\n        let previouNode: Node = slashNode.previousSibling;\n        const brTag: HTMLElement = document.createElement('br');\n        if (slashNode.parentElement && slashNode.parentElement.innerHTML.length === 1) {\n            slashNode.parentElement.appendChild(brTag);\n        }\n        slashNode.parentNode.removeChild(slashNode);\n        if(previouNode) {\n            this.selection.setCursorPoint(document, previouNode as Element, previouNode.textContent.length);\n        }\n    }\n    public beforeOpen() {\n        this.saveSelection = this.selection.save(this.selection.getRange(document), document);\n    }\n\n    public filtering(): void {\n        this.saveSelection = this.selection.save(this.selection.getRange(document), document);\n    }\n\n    public applyCommand(args: SelectEventArgs): void {\n        args.cancel = true;\n        this.rteObj.focusIn();\n        this.saveSelection.restore();\n        const itemData = args.itemData as { [key: string]: Object };\n        const command = itemData.command;\n        if (!(itemData.formatType === 'Inline')) {\n            this.beforeApplyFormat(true);\n        }\n        switch (command) {\n            case 'OL':\n                this.rteObj.executeCommand('insertOrderedList');\n                break;\n            case 'UL':\n                this.rteObj.executeCommand('insertUnorderedList');\n                break;\n            case 'CreateTable':\n            case 'Image':\n            case 'Audio':\n            case 'Video':\n                this.mentionObj.hidePopup();\n                setTimeout(() => {\n                    this.rteObj.showDialog(command === 'Video' ? DialogType.InsertVideo : command === 'Audio'\n                        ? DialogType.InsertAudio : command === 'Image' ? DialogType.InsertImage : DialogType.InsertTable);\n                }, 150);\n                break;\n            case 'EmojiPicker':\n                this.beforeApplyFormat(false);\n                this.mentionObj.hidePopup();\n                setTimeout(() => { this.rteObj.showEmojiPicker(); }, 150);\n                break;\n            default:\n                this.rteObj.executeCommand('formatBlock', command);\n                break;\n        }\n    }\n}\n\n","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"utf-8\">\n            <title>Window</title>\n            <base href=\"/\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n          </head>\n          <body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n            <app-root></app-root>\n          </body>\n        </html>","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section e-rte-mention-format-section\">\n    <div class=\"sample-container\">\n        <div class=\"default-section\" #mentionFormatIntegration id=\"mentionFormatIntegration\">\n            <ejs-richtexteditor id=\"MentionInlineFormat\" #MentionInlineFormat [toolbarSettings]='tools' placeholder=\"Type '/' and choose format\" (actionBegin)=\"onActionBegin($event)\" >\n            </ejs-richtexteditor>\n            <ejs-mention #Mention [dataSource]='data' target='#MentionInlineFormat_rte-edit-view' [fields]='fieldsData' mentionChar=\"/\" [allowSpaces]=\"true\"  \n                popupWidth='320px' popupHeight='290px' (select)=\"applyCommand($event)\" (beforeOpen)=\"beforeOpen()\" (filtering)=\"filtering()\">\n                <ng-template #itemTemplate let-data>\n                        <table class=\"format-table\">\n                            <tr>\n                                <td>\n                                    <span id=\"icons\" class={{data.icon}}></span>\n                                </td>\n                                <td>\n                                    <span class=\"font\">{{data.formatName}}</span>\n                                    <span class=\"description\">{{data.description}}</span>\n                                </td>\n                            </tr>\n                        </table>\n                </ng-template>\n            </ejs-mention>\n        </div>\n    </div>\n</div>\n\n<div id=\"description\">\n    <p>The &#64;mention component is integrated into the Rich Text Editor and shows the suggestion list when the slash (/) key is pressed in an editor and applies suggested formats. To achieve this, the sample is customized for the Mention and Rich Text Editor.</p>\n        <ul>\n          <li>Prevent the &#64;mention default selection action by setting the <a target='_blank' href='https://ej2.syncfusion.com/angular/documentation/api/mention/selectEventArgs/#cancel'>args.cancel</a> as <code>true</code> at the <a target='_blank' href='https://ej2.syncfusion.com/angular/documentation/api/mention/selectEventArgs'>select</a> event.</li>\n          <li>Get the command name from the Mention component, select an event, and pass it to the public method <a target='_blank' href=\"https://ej2.syncfusion.com/angular/documentation/api/rich-text-editor#executecommand\">executeCommand</a> to perform the specified formats on the selected text in an editor.</li>\n        </ul>\n    <p> The following formats are shown in the mention suggestion list; apply them in an editor.</p>\n    <ul>\n        <li><code>Basic blocks</code> - The Rich Text Editor supports basic text formatting blocks, including <code>paragraph</code>, <code>headings</code>, <code>code</code>,<code>quotation</code>, <code>lists</code>, and <code>table</code> making it easier for users to structure their content. When a user selects a basic block format, it will be applied to the next line or paragraph.</li>\n        <li><code>Inline formats</code> - The Rich Text Editor supports inline formatting, allowing you to add <code>emojis</code> to specific text within the the content.</li>\n        <li><code>Media formats</code> -  The Rich Text Editor also supports media formats, including <code>image</code>, <code>video</code>, and <code>audio</code>, making it an efficient tool for the content creation.</li>\n    </ul>\n</div>\n","app.component.css":".e-icons.block-view:before{\n    content: open-quote;\n    font-size: 30px;\n    line-height: 20px;\n}\n.e-icons.h1-view:before{\n    content: 'H1';\n}\n.e-icons.h2-view:before{\n    content: 'H2';\n}\n.e-icons.h3-view:before{\n    content: 'H3';\n}\n.e-icons.h4-view:before{\n    content: 'H4';\n}\n.e-icons.e-text:before{\n    content: 'T';\n}\n\n.format-table #icons {\n    padding: 15px 15px;\n    display: inline-block;\n    width: 55px;\n    font-size: 20px;\n    line-height: 0px;\n}\n\n.format-table #icons.e-icons.e-image, .format-table #icons.e-icons.e-audio, .format-table #icons.e-icons.e-table, \n.format-table #icons.e-icons.e-video, .format-table #icons.e-list-unordered, .format-table #icons.e-list-ordered{\n    line-height: 10px !important;\n}\n\n.format-table .description {\n    display: block;\n    line-height: 20px;\n    font-size: 12px;\n    padding: 1px 0px 5px 0px;\n}\n.format-table .font {\n    font-size: 16px;\n    display: block;\n    line-height: 20px;\n    padding: 5px 0px 1px 0px;\n}\n\n#MentionInlineFormat .e-mention-chip{\n    cursor: pointer;\n}\n\n  .e-rte-quick-popup .e-rte-quick-toolbar .e-roatate-left::before {\n        content: \"\\e76e\";\n    }\n\n    .e-rte-quick-popup .e-rte-quick-toolbar .e-roatate-right::before {\n        content: \"\\e726\";\n    }\n\n    .e-richtexteditor textarea.e-content {\n      float: left;\n    }\n    .e-richtexteditor .e-rte-content {\n      overflow: hidden;\n    }\n    .e-rte-content .e-content.e-pre-source{\n      width: 100%;\n    }\n\n    .property-panel-content td{\n        width: 50%;\n    }\n    .property-panel-content td div {\n        padding-left: 10px;\n        padding-top: 10px;\n    }\n\n    .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e350';\n    }\n\n\t.e-icon-btn .e-md-preview.e-icons::before {\n\t\tcontent: '\\e345';\n\t}\n\n    .bootstrap4 .e-icon-btn.e-active .e-md-preview::before {\n        content: '\\e790';\n    }\n\n    .bootstrap4 .e-icon-btn .e-md-preview::before {\n        content: '\\e787';\n    }\n\n    .e-icon-btn.e-active .e-md-preview::before,\n    #mdCustom .e-icon-btn.e-active .e-md-preview.e-icons::before {\n\t\tcontent: '\\e350';\n\t}\n\t#mdCustom .e-icon-btn .e-md-preview.e-icons::before {\n\t\tcontent: '\\e345';\n    }\n  .material3 .e-rte-emoticon-tbar-section .char_block.e-active,\n  .material3-dark .e-rte-emoticon-tbar-section .char_block.e-active {\n        outline: 1px solid #D0BCFF;\n        border-color: #D0BCFF;\n    }\n","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-richtexteditor\":\"*\",\"@syncfusion/ej2-angular-richtexteditor\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}