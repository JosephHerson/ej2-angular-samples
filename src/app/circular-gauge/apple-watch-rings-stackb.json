{"main.ts":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","polyfills.ts":"/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/**\n * IE11 requires the following for NgClass support on SVG elements\n */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';\nimport 'reflect-metadata';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n    <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-WLQL39J\"height=\"0\"width=\"0\"style=\"display:none;visibility:hidden\"></iframe></noscript>\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"/**\n * Sample to design Apple watch ring using the Circular Gauge\n */\n\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme } from '@syncfusion/ej2-angular-circulargauge';\n\n// custom code start\n// tslint:disable\n// custom code end\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n\n    @ViewChild('circulargauge')\n    public circulargauge: CircularGaugeComponent;\n\n    public lineStyle: Object = {\n        width: 0\n    };\n\n    public labelStyle: Object = {\n        font: {\n            size: '0px',\n            color: 'transparent'\n        },\n        position: 'Inside',\n        useRangeColor: true\n    };\n\n    public ranges: Object[] = [\n        {\n            start: 0, end: 100,\n            radius: '90%',\n            startWidth: 40, endWidth: 40,\n            color: '#fa114f', opacity: 0.2\n        },\n        {\n            start: 0, end: 100,\n            radius: '68%',\n            startWidth: 40, endWidth: 40,\n            color: '#99ff01', opacity: 0.2\n        },\n        {\n            start: 0, end: 100,\n            radius: '46%',\n            startWidth: 40, endWidth: 40,\n            color: '#00d8fe', opacity: 0.2\n        }\n    ];\n\n    public pointers: Object[] = [{\n        roundedCornerRadius: 25,\n        value: 65,\n        type: 'RangeBar',\n        radius: '90%',\n        color: '#fa114f',\n        animation: { enable: true },\n        pointerWidth: 40\n    },\n    {\n        roundedCornerRadius: 25,\n        value: 43,\n        type: 'RangeBar',\n        radius: '68%',\n        color: '#99ff01',\n        animation: { enable: true },\n        pointerWidth: 40\n    },\n    {\n        roundedCornerRadius: 25,\n        value: 58,\n        type: 'RangeBar',\n        radius: '46%',\n        color: '#00d8fe',\n        animation: { enable: true },\n        pointerWidth: 40\n    }];\n\n    public majorTicks: Object = {\n        height: 0,\n    };\n\n    public minorTicks: Object = {\n        height: 0\n    };\n\n    public annotaions: Object = [{\n        angle: 8, radius: '80%', zIndex: '1',\n        content: '<div id=\"annotation1\"><img style=\"width:22px;height:22px;\" src=\"./assets/circular-gauge/images/image1.svg\" /></div>'\n    }, {\n        angle: 11, radius: '58%', zIndex: '1',\n        content: '<div id=\"annotation2\"><img style=\"width:22px;height:22px;\" src=\"./assets/circular-gauge/images/image2.svg\" /></div>'\n    }, {\n        angle: 16, radius: '36%', zIndex: '1',\n        content: '<div id=\"annotation3\"><img style=\"width:22px;height:22px;\" src=\"./assets/circular-gauge/images/image3.svg\" /></div>'\n    }];\n\n    public redGaugeRange: Object[] = [\n        {\n            start: 0, end: 100,\n            radius: '100%',\n            startWidth: 8, endWidth: 8,\n            color: '#fa114f', opacity: 0.2\n        }];\n\n    public redGaugePointer: Object[] = [{\n        roundedCornerRadius: 5,\n        value: 65,\n        type: 'RangeBar',\n        radius: '100%',\n        color: '#fa114f',\n        animation: { enable: true },\n        pointerWidth: 8\n    }];\n\n    public redGaugeAnnotaion: Object = [{\n        angle: 0, radius: '0%', zIndex: '1',\n        content: '<div id=\"annotation4\"><img class=\"firstAnnotation\" src=\"./assets/circular-gauge/images/image1.svg\" /></div>'\n    }];\n\n    public greenGaugeRange: Object[] = [\n        {\n            start: 0, end: 100,\n            radius: '100%',\n            startWidth: 8, endWidth: 8,\n            color: '#99ff01', opacity: 0.2\n        }];\n\n    public greenGaugePointer: Object[] = [{\n        roundedCornerRadius: 5,\n        value: 43,\n        type: 'RangeBar',\n        radius: '100%',\n        color: '#99ff01',\n        animation: { enable: true },\n        pointerWidth: 8\n    }];\n\n    public greenGaugeAnnotaion: Object = [{\n        angle: 0, radius: '0%', zIndex: '1',\n        content: '<div id=\"annotation6\"><img class=\"secondAnnotation\" src=\"./assets/circular-gauge/images/image2.svg\" /></div>'\n    }];\n\n    public blueGaugeRange: Object[] = [\n        {\n            start: 0, end: 100,\n            radius: '100%',\n            startWidth: 8, endWidth: 8,\n            color: '#00d8fe', opacity: 0.2\n        }];\n\n    public blueGaugePointer: Object[] = [{\n        roundedCornerRadius: 5,\n        value: 58,\n        type: 'RangeBar',\n        radius: '100%',\n        color: '#00d8fe',\n        animation: { enable: true },\n        pointerWidth: 8\n    }];\n\n    public blueGaugeAnnotaion: Object = [{\n        angle: 0, radius: '0%', zIndex: '1',\n        content: '<div id=\"annotation6\"><img class=\"thirdAnnotation\" src=\"./assets/circular-gauge/images/image3.svg\" /></div>'\n    }];\n\n    public load(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        // custom code end\n    }\n\n    public loadRedGauge(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        if (selectedTheme === 'highcontrast') {\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:17px;height:17px;\" src=\"./assets/circular-gauge/images/image4.svg\" /></div>';\n        }\n        // custom code end\n    }\n\n    public loadGreenGauge(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        if (selectedTheme === 'highcontrast') {\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:15px;height:15px;\" src=\"./assets/circular-gauge/images/image5.svg\" /></div>';\n        }\n        // custom code end\n    }\n\n    public loadBlueGauge(args: ILoadedEventArgs): void {\n        // custom code start\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        if (selectedTheme === 'highcontrast') {\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:17px;height:17px;\" src=\"./assets/circular-gauge/images/image6.svg\" /></div>';\n        }\n        // custom code end\n    }\n\n    constructor() {\n        // code\n    };\n}","app/app.module.ts":"import { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\n\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\n\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-angular-circulargauge';\n\nimport { HttpModule } from '@angular/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RouterModule } from '@angular/router';\n\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from '../app.component';\n@NgModule({ declarations: [ AppComponent ], imports: [ CircularGaugeAllModule, GridModule, ButtonModule, CheckBoxModule, BrowserModule], providers: [], bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","app.component.html":"<div>\n    <div align=\"center\" class=\"col-xs-10 col-sm-10 col-lg-8 col-md-8\">\n        <div class=\"divide\">\n            <ejs-circulargauge (load)='load($event)' background='transparent' style='display:block;' id='gauge'\n                #circulargauge='' width='400px' height='400px'>\n                <e-axes>\n                    <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks'\n                        [labelStyle]='labelStyle' [lineStyle]='lineStyle' [minorTicks]='minorTicks'\n                        [annotations]='annotaions' [ranges]='ranges' [pointers]='pointers'>\n                    </e-axis>\n                </e-axes>\n            </ejs-circulargauge>\n        </div>\n    </div>\n    <div align=\"center\" class=\"col-xs-4 col-sm-4 col-lg-2 col-md-2\" style=\"margin-top: 3%;\">\n        <div class=\"panel\" align=\"center\">\n            <div class=\"subgauge\" style=\"float: left;margin-top: 2%\">\n                <ejs-circulargauge (load)='loadRedGauge($event)' background='transparent' style='display:block;'\n                    id='redGauge' #circulargauge='' width='65px' height='65px'>\n                    <e-axes>\n                        <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks'\n                            [labelStyle]='labelStyle' [lineStyle]='lineStyle' [minorTicks]='minorTicks'\n                            [annotations]='redGaugeAnnotaion' [ranges]='redGaugeRange' [pointers]='redGaugePointer'>\n                        </e-axis>\n                    </e-axes>\n                </ejs-circulargauge>\n            </div>\n            <div class=\"content\">\n                <span class=\"firstcontent\" style=\"font-size: 17px;\">MOVE </span>\n                <span class=\"firstcontent\" style=\"font-size: 17px;color: #f4104d\">65%</span><br />\n                <span class=\"secondcontent\" style=\"color: #f4104d; font-size: 19px\">338/520 CAL</span>\n            </div>\n        </div>\n        <div class=\"panel\" align=\"center\">\n            <div class=\"subgauge\" style=\"float: left;margin-top: 2%\">\n                <ejs-circulargauge (load)='loadGreenGauge($event)' background='transparent' style='display:block;'\n                    id='greenGauge' #circulargauge='' width='65px' height='65px'>\n                    <e-axes>\n                        <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks'\n                            [labelStyle]='labelStyle' [lineStyle]='lineStyle' [minorTicks]='minorTicks'\n                            [annotations]='greenGaugeAnnotaion' [ranges]='greenGaugeRange'\n                            [pointers]='greenGaugePointer'>\n                        </e-axis>\n                    </e-axes>\n                </ejs-circulargauge>\n            </div>\n            <div class=\"content\">\n                <span class=\"firstcontent\" style=\"font-size: 17px;\">EXERCISE </span>\n                <span class=\"firstcontent\" style=\"font-size: 17px;color: #a6ff00\">43%</span><br />\n                <span class=\"secondcontent\" style=\"color: #a6ff00; font-size: 19px\">13/30 MIN</span>\n            </div>\n        </div>\n        <div class=\"panel\" align=\"center\">\n            <div class=\"subgauge\" style=\"float: left;margin-top: 2%\">\n                <ejs-circulargauge (load)='loadBlueGauge($event)' background='transparent' style='display:block;'\n                    id='blueGauge' #circulargauge='' width='65px' height='65px'>\n                    <e-axes>\n                        <e-axis minimum=0 maximum=100 startAngle=0 endAngle=360 [majorTicks]='majorTicks'\n                            [labelStyle]='labelStyle' [lineStyle]='lineStyle' [minorTicks]='minorTicks'\n                            [annotations]='blueGaugeAnnotaion' [ranges]='blueGaugeRange' [pointers]='blueGaugePointer'>\n                        </e-axis>\n                    </e-axes>\n                </ejs-circulargauge>\n            </div>\n            <div class=\"content\">\n                <span class=\"firstcontent\" style=\"font-size: 17px;\">STAND </span>\n                <span class=\"firstcontent\" style=\"font-size: 17px;color: #00d8fe\">58%</span><br />\n                <span class=\"secondcontent\" style=\"color: #00d8fe; font-size: 19px\">7/12 HR</span>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- custom code start -->\n<style>\n    .divide {\n        margin-left: 0%;\n    }\n\n    .panel {\n        width: 190px !important;\n        height: 70px !important;\n        margin-left: 5% !important;\n        margin-top: 10% !important;\n        border-color: lightgray;\n        float: left;\n        background-color: transparent;\n    }\n\n    .content {\n        float: left !important;\n        margin-left: 62px !important;\n        margin-top: 10px !important;\n        text-align: left !important;\n        position: absolute;\n        width: 120px;\n    }\n\n    @media screen and (max-width: 1160px) {\n        .panel {\n            width: 165px !important;\n        }\n\n        .firstcontent {\n            font-size: 13px !important;\n        }\n\n        .secondcontent {\n            font-size: 15px !important;\n        }\n\n        .content {\n            margin-top: 15px !important;\n        }\n\n        .divide {\n            margin-left: 0%;\n        }\n    }\n\n    @media screen and (max-width: 990px) {\n        .panel {\n            width: 190px !important;\n            height: 70px !important;\n            margin-left: 100% !important;\n            margin-top: 10px !important;\n        }\n\n        .subgauge {\n            margin-left: 0% !important;\n            margin-top: 1% !important;\n        }\n\n        .content {\n            margin-left: 63px !important;\n            margin-top: 10px !important;\n        }\n\n        .firstcontent {\n            font-size: 16px !important;\n        }\n\n        .secondcontent {\n            font-size: 18px !important;\n        }\n\n        .divide {\n            margin-left: 0%;\n        }\n    }\n\n    @media screen and (min-width: 768px) {\n        .divide {\n            margin-left: 10%;\n        }\n    }\n\n    @media screen and (max-width: 410px) {\n        .divide {\n            margin-left: 10%;\n        }\n\n        #column1 {\n            margin-left: -9% !important;\n        }\n\n        .subgauge {\n            margin-left: 3% !important;\n        }\n\n        .panel {\n            width: 165px !important;\n        }\n\n        .content {\n            margin-top: 3% !important;\n        }\n    }\n\n    .fluent #redGauge_Axis_0_Annotation_0 .firstAnnotation,\n    .fluent-dark #redGauge_Axis_0_Annotation_0 .firstAnnotation {\n        margin-left: 4px;\n        margin-top: 2px;\n        height: 17px;\n        width: 17px;\n    }\n\n    .bootstrap5 #redGauge_Axis_0_Annotation_0 .firstAnnotation,\n    .bootstrap5-dark #redGauge_Axis_0_Annotation_0 .firstAnnotation {\n        margin-left: 4px;\n        margin-top: 2px;\n        height: 17px;\n        width: 17px;\n    }\n\n    .tailwind #redGauge_Axis_0_Annotation_0 .firstAnnotation,\n    .tailwind-dark #redGauge_Axis_0_Annotation_0 .firstAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 2px;\n        margin-bottom: 4px;\n    }\n\n    .material #redGauge_Axis_0_Annotation_0 .firstAnnotation,\n    .material-dark #redGauge_Axis_0_Annotation_0 .firstAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 2px;\n        margin-top: 1px;\n    }\n\n    .fabric #redGauge_Axis_0_Annotation_0 .firstAnnotation,\n    .fabric-dark #redGauge_Axis_0_Annotation_0 .firstAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 2px;\n        margin-bottom: 2px;\n        margin-top: -3px;\n    }\n\n    .bootstrap #redGauge_Axis_0_Annotation_0 .firstAnnotation,\n    .bootstrap-dark #redGauge_Axis_0_Annotation_0 .firstAnnotation,\n    .bootstrap4 #redGauge_Axis_0_Annotation_0 .firstAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 2px;\n        margin-top: 2px;\n    }\n\n    #greenGauge_Axis_0_Annotation_0 .secondAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 1px;\n    }\n\n    .tailwind #greenGauge_Axis_0_Annotation_0 .secondAnnotation,\n    .tailwind-dark #greenGauge_Axis_0_Annotation_0 .secondAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 2px;\n        margin-bottom: 4px;\n    }\n\n    .material #greenGauge_Axis_0_Annotation_0 .secondAnnotation,\n    .material-dark #greenGauge_Axis_0_Annotation_0 .secondAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 2px;\n        margin-top: 2px;\n    }\n\n    .fabric #greenGauge_Axis_0_Annotation_0 .secondAnnotation,\n    .fabric-dark #greenGauge_Axis_0_Annotation_0 .secondAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 2px;\n        margin-bottom: 4px;\n    }\n\n    .bootstrap #greenGauge_Axis_0_Annotation_0 .secondAnnotation,\n    .bootstrap-dark #greenGauge_Axis_0_Annotation_0 .secondAnnotation,\n    .bootstrap4 #greenGauge_Axis_0_Annotation_0 .secondAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 1px;\n        margin-top: 2px;\n    }\n\n    #blueGauge_Axis_0_Annotation_0 .thirdAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-top: -2px;\n        margin-left: 0px;\n    }\n\n    .tailwind #blueGauge_Axis_0_Annotation_0 .thirdAnnotation,\n    .tailwind-dark #blueGauge_Axis_0_Annotation_0 .thirdAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-top: -7px;\n        margin-left: 1px;\n    }\n\n    .fabric #blueGauge_Axis_0_Annotation_0 .thirdAnnotation,\n    .fabric-dark #blueGauge_Axis_0_Annotation_0 .thirdAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 1px;\n        margin-top: -7px;\n    }\n\n    .bootstrap #blueGauge_Axis_0_Annotation_0 .thirdAnnotation,\n    .bootstrap-dark #blueGauge_Axis_0_Annotation_0 .thirdAnnotation,\n    .bootstrap4 #blueGauge_Axis_0_Annotation_0 .thirdAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 0.5px;\n        margin-top: 0px;\n    }\n\n    .material #blueGauge_Axis_0_Annotation_0 .thirdAnnotation,\n    .material-dark #blueGauge_Axis_0_Annotation_0 .thirdAnnotation {\n        height: 17px;\n        width: 17px;\n        margin-left: 0px;\n        margin-top: 0px;\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}