{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-angular-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\nimport { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme } from '@syncfusion/ej2-angular-circulargauge';\n\n@Component({\n    standalone: true,\n    imports: [ CircularGaugeAllModule, GridModule, ButtonModule, CheckBoxModule, ],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n\n    @ViewChild('needlePointer')\n    public needlePointerGauge: CircularGaugeComponent;\n    @ViewChild('liveUpdate')\n    public liveUpdateGauge: CircularGaugeComponent;\n\n    public needleInterval: number;\n    public liveUpdateInterval: number;\n\n    public lineStyleRangeBar: Object = {\n        width: 3,\n        color: '#ff5985'\n    };\n\n    public labelStyleRangeBar: Object = {\n        position: 'Outside',\n        font: { size: '0px' }\n    };\n\n    public majorTicks: Object = {\n        height: 0,\n        interval: 100\n    };\n\n    public minorTicks: Object = {\n        height: 0,\n        width: 0\n    };\n\n    public pointerRangeBar: Object[] = [{\n        type: 'RangeBar',\n        value: 66,\n        radius: '90%',\n        color: '#ff5985',\n        pointerWidth: 10,\n        animation: { enable: true, duration: 1000 }\n\n    }];\n\n    public pointerMarker: Object[] = [{\n        radius: '100%',\n        value: 80,\n        type: 'Marker',\n        markerShape: 'InvertedTriangle',\n        markerWidth: 15,\n        markerHeight: 15,\n        color: 'rgb(0,171,169)'\n\n    }];\n\n    public pointerCustomized: Object[] = [{\n        animation: { enable: true, duration: 1000 },\n        value: 80,\n        radius: '80%',\n        color: 'green',\n        pointerWidth: 2,\n        needleStartWidth: 4,\n        needleEndWidth: 4,\n        cap: {\n            radius: 8,\n            color: 'green'\n        },\n        needleTail: {\n            length: '0%'\n        }\n    }];\n\n    public pointerNeedle: Object[] = [{\n        radius: '100%',\n        animation: { enable: true, duration: 900 },\n        value: 80,\n        color: '#923C99',\n        pointerWidth: 6,\n        cap: { radius: 0 },\n        needleTail: { length: '4%', color: '#923C99' }\n\n    }];\n\n    public pointerUpdate: Object[] = [{\n        radius: '100%',\n        animation: { enable: false, duration: 100 },\n        value: 40,\n        color: '#067bc2',\n        pointerWidth: 6,\n        cap: { radius: 0 },\n        needleTail: { length: '4%', color: '#067bc2' }\n    }, {\n        radius: '100%',\n        type: 'RangeBar',\n        animation: { enable: false, duration: 100 },\n        value: 40,\n        color: '#067bc2',\n        pointerWidth: 5\n\n    }];\n\n    public pointerMultiple: Object[] = [{\n        radius: '60%',\n        value: 80,\n        markerWidth: 5,\n        markerHeight: 5,\n        animation: { enable: true, duration: 1000 },\n        color: '#e3a21a',\n        pointerWidth: 10,\n        cap: {\n            radius: 8,\n            color: 'white',\n            border: {\n                color: '#e3a21a',\n                width: 1\n            }\n        },\n        needleTail: {\n            length: '20%',\n            color: '#e3a21a'\n        }\n    }, {\n        radius: '60%', value: 40,\n        markerWidth: 5, markerHeight: 5,\n        animation: { enable: true, duration: 1000 },\n        color: '#ffb133',\n        pointerWidth: 10,\n        cap: {\n            radius: 8, color: 'white',\n            border: {\n                color: '#ffb133',\n                width: 1\n            }\n        },\n        needleTail: {\n            length: '20%',\n            color: '#e3a21a'\n        }\n    }];\n\n    public lineStyleMarker: Object = {\n        width: 3,\n        color: '#01aebe'\n    };\n\n    public labelStyleMarker: Object = {\n        position: 'Outside',\n        font: { size: '0px' }\n    };\n\n    public lineStyleCustomized: Object = {\n        width: 3,\n        color: '#1E7145'\n    };\n\n    public labelStyleCustomized: Object = {\n        position: 'Outside',\n        font: { size: '0px', color: '#1E7145' }\n    };\n\n    public lineStyleMultiple: Object = {\n        width: 3,\n        color: '#e3a21a'\n    };\n\n    public labelStyleMultiple: Object = {\n        position: 'Outside',\n        font: { size: '0px', color: '#e3a21a' }\n    };\n\n    public lineStyleNeedle: Object = {\n        width: 3,\n        color: '#9250e6'\n    };\n\n    public labelStyleNeedle: Object = {\n        position: 'Outside',\n        font: { size: '0px', color: '#9250e6' }\n    };\n\n    public lineStyleUpdate: Object = {\n        width: 0\n    };\n\n    public labelStyleUpdate: Object = {\n        position: 'Outside',\n        font: { size: '0px', color: '#067bc2' }\n    };\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        /* custom code end */\n    }\n\n    ngAfterViewInit(): void {\n        this.needleInterval = window.setInterval(\n            (): void => {\n                let newVal: number = Math.random() * (90 - 20) + 20;\n                if (document.getElementById('needlePointer')) {\n                    this.needlePointerGauge.setPointerValue(0, 0, newVal);\n                } else {\n                    clearInterval(this.needleInterval);\n                }\n            },\n            1000\n        );\n\n        this.liveUpdateInterval = window.setInterval(\n            (): void => {\n                let newVal: number = Math.random() * (80 - 30) + 30;\n                if (document.getElementById('liveUpdate')) {\n                    this.liveUpdateGauge.setPointerValue(0, 0, newVal);\n                    this.liveUpdateGauge.setPointerValue(0, 1, newVal);\n                } else {\n                    clearInterval(this.needleInterval);\n                }\n            },\n            1000\n        );\n    }\n\n    constructor() {\n        // code\n    };\n}","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <ejs-circulargauge (load)='load($event)' id=\"markerPointer\" style='display: block; height:250px;'\n                        centerY='40%' background='transparent'>\n                        <e-axes>\n                            <e-axis startAngle=270 endAngle=90 [lineStyle]='lineStyleMarker'\n                                [labelStyle]='labelStyleMarker' [majorTicks]='majorTicks' [minorTicks]='minorTicks'\n                                radius='90%' minimum=0 maximum=100 [pointers]='pointerMarker'>\n                                <e-annotations>\n                                    <e-annotation\n                                        content='<div style=\"font-size:14px;margin-top:10px;\">Marker pointer</div>'\n                                        angle=180 radius='28%' zIndex='1'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ejs-circulargauge>\n                </div>\n                <div class=\"col-sm-4\">\n                    <ejs-circulargauge (load)='load($event)' id=\"rangeBarPointer\" style='display: block; height:250px;'\n                        centerY='40%' background='transparent'>\n                        <e-axes>\n                            <e-axis startAngle=270 endAngle=90 [lineStyle]='lineStyleRangeBar'\n                                [labelStyle]='labelStyleRangeBar' [majorTicks]='majorTicks' [minorTicks]='minorTicks'\n                                radius='90%' minimum=0 maximum=100 [pointers]='pointerRangeBar'>\n                                <e-annotations>\n                                    <e-annotation\n                                        content='<div style=\"font-size:14px;margin-top:11px;\">Range bar pointer</div>'\n                                        angle=180 radius='28%' zIndex='1'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ejs-circulargauge>\n                </div>\n                <div class=\"col-sm-4\">\n                    <ejs-circulargauge (load)='load($event)' id=\"needlePointer\" #needlePointer\n                        style='display: block; height:250px;' centerY='40%' background='transparent'>\n                        <e-axes>\n                            <e-axis startAngle=270 endAngle=90 [lineStyle]='lineStyleNeedle'\n                                [labelStyle]='labelStyleNeedle' [majorTicks]='majorTicks' [minorTicks]='minorTicks'\n                                radius='90%' minimum=0 maximum=100 [pointers]='pointerNeedle'>\n                                <e-annotations>\n                                    <e-annotation\n                                        content='<div style=\"font-size:14px;margin-top:10px;\">Needle pointer</div>'\n                                        angle=180 radius='28%' zIndex='1'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ejs-circulargauge>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <ejs-circulargauge (load)='load($event)' id=\"customizedPointer\" centerY='40%'\n                        style='display: block; height:250px;' centerY='40%' background='transparent'>\n                        <e-axes>\n                            <e-axis startAngle=270 endAngle=90 [lineStyle]='lineStyleCustomized'\n                                [labelStyle]='labelStyleCustomized' [majorTicks]='majorTicks' [minorTicks]='minorTicks'\n                                radius='90%' minimum=0 maximum=100 [pointers]='pointerCustomized'>\n                                <e-annotations>\n                                    <e-annotation\n                                        content='<div style=\"font-size:14px;margin-top:29px;\">Customized pointer</div>'\n                                        angle=180 radius='28%' zIndex='1'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ejs-circulargauge>\n                </div>\n                <div class=\"col-sm-4\">\n                    <ejs-circulargauge (load)='load($event)' id=\"multiplePointer\" centerY='40%'\n                        style='display: block; height:250px;' centerY='40%' background='transparent'>\n                        <e-axes>\n                            <e-axis startAngle=270 endAngle=90 [lineStyle]='lineStyleMultiple'\n                                [labelStyle]='labelStyleMultiple' [majorTicks]='majorTicks' [minorTicks]='minorTicks'\n                                radius='90%' minimum=0 maximum=100 [pointers]='pointerMultiple'>\n                                <e-annotations>\n                                    <e-annotation\n                                        content='<div style=\"font-size:14px;margin-top:22px;\">Multiple pointers</div>'\n                                        angle=180 radius='32%' zIndex='1'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ejs-circulargauge>\n                </div>\n                <div class=\"col-sm-4\">\n                    <ejs-circulargauge (load)='load($event)' id=\"liveUpdate\" centerY='40%' #liveUpdate\n                        style='display: block; height:250px;' centerY='40%' background='transparent'>\n                        <e-axes>\n                            <e-axis startAngle=270 endAngle=90 [lineStyle]='lineStyleUpdate'\n                                [labelStyle]='labelStyleUpdate' [majorTicks]='majorTicks' [minorTicks]='minorTicks'\n                                radius='90%' minimum=0 maximum=100 [pointers]='pointerUpdate'>\n                                <e-annotations>\n                                    <e-annotation\n                                        content='<div style=\"font-size:14px;margin-top:22px;\">Live update</div>'\n                                        angle=180 radius='32%' zIndex='1'></e-annotation>\n                                </e-annotations>\n                            </e-axis>\n                        </e-axes>\n                    </ejs-circulargauge>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- custom code start -->\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}