{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-angular-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\nimport { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ILoadedEventArgs, IPointerDragEventArgs, GaugeTheme } from '@syncfusion/ej2-circulargauge';\nimport { CircularGaugeComponent } from '@syncfusion/ej2-angular-circulargauge';\n\n@Component({\n    standalone: true,\n    imports: [ CircularGaugeAllModule, GridModule, ButtonModule, CheckBoxModule, ],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n\n    @ViewChild('tooltipContainer')\n    public circulargauge: CircularGaugeComponent;\n\n    public title: string = 'Tooltip Customization';\n    public rangeWidth: number = 10;\n\n    public cap: Object = {\n        radius: 10,\n        border: { color: '#33BCBD', width: 5 }\n    };\n\n    public animation: Object = {\n        enable: true,\n        duration: 1500\n    };\n\n    public titleStyle: Object = {\n        size: '15px',\n        color: 'grey'\n    };\n\n    public majorTicks: Object = {\n        color: 'white', offset: -5, height: 12\n    };\n\n    public minorTicks: Object = {\n        width: 0\n    };\n\n    public labelStyle: Object = {\n        useRangeColor: true, font: { color: '#424242', size: '13px', fontFamily: 'inherit' }\n    };\n\n    public lineStyle: Object = { width: 0 };\n\n    public tooltip: Object = {\n        enable: true,\n        type: ['Range', 'Pointer'],\n        showAtMousePosition: true,\n        format: 'Current Value:  {value}',\n        enableAnimation: false,\n        textStyle: {\n            size: '13px',\n            fontFamily: 'inherit'\n        },\n        rangeSettings: {\n            showAtMousePosition: true, format: \"Start Value: {start} <br/> End Value: {end}\", textStyle: {\n                size: '13px',\n                fontFamily: 'inherit'\n            }\n        }\n    };\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        /* custom code end */\n    }\n\n    public dragEnd(args: IPointerDragEventArgs): void {\n        if (args.currentValue >= 0 && args.currentValue <= 50) {\n            args.pointer.color = '#3A5DC8';\n            args.pointer.cap.border.color = '#3A5DC8';\n        } else {\n            args.pointer.color = '#33BCBD';\n            args.pointer.cap.border.color = '#33BCBD';\n        }\n        args.pointer.value = args.currentValue;\n        args.pointer.animation.enable = false;\n        this.circulargauge.refresh();\n    }\n\n    constructor() {\n        // code\n    };\n}\n","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div id=\"tooltip-container\">\n        <ejs-circulargauge (load)='load($event)' animationDuration=2000 id='gauge' (dragEnd)='dragEnd($event)' style=\"display: block;\" background='transparent' #tooltipContainer='' enablePointerDrag='true'\n            [tooltip]='tooltip'>\n            <e-axes>\n                <e-axis radius='90%' minimum=0 maximum=120 startAngle=240 endAngle=120 [minorTicks]='minorTicks'\n                    [majorTicks]='majorTicks' [labelStyle]='labelStyle' [lineStyle]=\"lineStyle\">\n                    <e-pointers>\n                        <e-pointer value=70 radius='60%' [cap]='cap' [animation]='animation' color='#33BCBD'>\n                        </e-pointer>\n                    </e-pointers>\n                    <e-ranges>\n                        <e-range start=0 end=50 [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" radius='102%' color='#3A5DC8'>\n                        </e-range>\n                        <e-range start=50 end=120 radius='102%' [startWidth]=\"rangeWidth\" [endWidth]=\"rangeWidth\" color='#33BCBD'>\n                        </e-range>\n                    </e-ranges>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n    </div>\n</div>\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}