{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { CircularGaugeAllModule } from '@syncfusion/ej2-angular-circulargauge';\nimport { GridModule } from '@syncfusion/ej2-angular-grids';\nimport { ButtonModule, CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { CircularGaugeComponent, ILoadedEventArgs, GaugeTheme } from '@syncfusion/ej2-angular-circulargauge';\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\n\n@Component({\n    standalone: true,\n    imports: [ CircularGaugeAllModule, GridModule, ButtonModule, CheckBoxModule, ],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n\n    @ViewChild('range')\n    public circulargauge: CircularGaugeComponent;\n\n    public listObj: DropDownList;\n    public greenRangeStart: number = 0;\n    public yellowRangeStart: number = 40;\n    public redRangeStart: number = 80;\n\n    public lineStyle: Object = {\n        width: 10, color: 'transparent'\n    };\n\n    public labelStyle: Object = {\n        font: { fontFamily: 'inherit' }\n    };\n\n    public animation: Object = {\n        enable: true\n    };\n\n    public majorTicks: Object = {\n        height: 10, offset: 5\n    };\n\n    public minorTicks: Object = {\n        height: 0, width: 0\n    };\n\n    public tail: Object = {\n        length: '18%'\n    };\n\n    public pointerCap: Object = {\n        radius: 7\n    };\n\n    public annotaions: Object = [{\n        content: '<div><span style=\"font-size:14px;\">Speedometer</span></div>',\n        radius: '30%', angle: 0, zIndex: '1'\n    }, {\n        content: '<div><span style=\"font-size:20px;\">65 MPH</span></div>',\n        radius: '40%', angle: 180, zIndex: '1'\n    }];\n\n    public load(args: ILoadedEventArgs): void {\n        /* custom code start */\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.gauge.theme = <GaugeTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        /* custom code end */\n    }\n\n    ngOnInit(): void {\n        this.listObj = new DropDownList({\n            index: 0, width: '100%',\n            change: () => {\n                let index: number = +this.listObj.value;\n                (<HTMLInputElement>document.getElementById('endWidth')).value = this.circulargauge.axes[0].ranges[index].endWidth.toString();\n                document.getElementById('rangeEndWidth').innerHTML = this.circulargauge.axes[0].ranges[index].endWidth.toString();\n                (<HTMLInputElement>document.getElementById('startWidth')).value = this.circulargauge.axes[0].ranges[index].startWidth.toString();\n                document.getElementById('rangeStartWidth').innerHTML = this.circulargauge.axes[0].ranges[index].startWidth.toString();\n                document.getElementById('rangeEnd').innerHTML = this.circulargauge.axes[0].ranges[index].end.toString();\n                if (index == 0) {\n                    (<HTMLInputElement>document.getElementById('greenRangeStart')).min = \"0\";\n                    (<HTMLInputElement>document.getElementById('greenRangeStart')).max = \"40\";\n                    (<HTMLInputElement>document.getElementById('greenRangeEnd')).min = \"0\";\n                    (<HTMLInputElement>document.getElementById('greenRangeEnd')).max = \"40\";\n                } else if (index == 1) {\n                    (<HTMLInputElement>document.getElementById('greenRangeStart')).min = \"40\";\n                    (<HTMLInputElement>document.getElementById('greenRangeStart')).max = \"80\";\n                    (<HTMLInputElement>document.getElementById('greenRangeEnd')).min = \"40\";\n                    (<HTMLInputElement>document.getElementById('greenRangeEnd')).max = \"80\";\n                } else {\n                    (<HTMLInputElement>document.getElementById('greenRangeStart')).min = \"80\";\n                    (<HTMLInputElement>document.getElementById('greenRangeStart')).max = \"120\";\n                    (<HTMLInputElement>document.getElementById('greenRangeEnd')).min = \"80\";\n                    (<HTMLInputElement>document.getElementById('greenRangeEnd')).max = \"120\";\n                }\n                (<HTMLInputElement>document.getElementById('greenRangeStart')).value = this.circulargauge.axes[0].ranges[index].start.toString();\n                (<HTMLInputElement>document.getElementById('greenRangeEnd')).value = this.circulargauge.axes[0].ranges[index].end.toString();\n                document.getElementById('rangeStart').innerHTML = this.circulargauge.axes[0].ranges[index].start.toString();\n                (<HTMLInputElement>document.getElementById('radius')).value = this.circulargauge.axes[0].ranges[index].roundedCornerRadius.toString();\n                document.getElementById('roundedRadius').innerHTML = this.circulargauge.axes[0].ranges[index].roundedCornerRadius.toString();\n            }\n        });\n        this.listObj.appendTo('#rangeSelect');\n    }\n\n    ngAfterViewInit(): void {\n        document.getElementById('greenRangeStart').onpointermove = document.getElementById('greenRangeStart').ontouchmove =\n            document.getElementById('greenRangeStart').onchange = () => {\n                let index: number = +this.listObj.value;\n                let start: number = parseInt((<HTMLInputElement>document.getElementById('greenRangeStart')).value, 10);\n                document.getElementById('rangeStart').innerHTML = start.toString();\n                this.circulargauge.axes[0].ranges[index].start = start;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('greenRangeEnd').onpointermove = document.getElementById('greenRangeEnd').ontouchmove =\n            document.getElementById('greenRangeEnd').onchange = () => {\n                let index: number = +this.listObj.value;\n                let end: number = parseInt((<HTMLInputElement>document.getElementById('greenRangeEnd')).value, 10);\n                document.getElementById('rangeEnd').innerHTML = end.toString();\n                this.circulargauge.axes[0].ranges[index].end = end;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('startWidth').onpointermove = document.getElementById('startWidth').ontouchmove =\n            document.getElementById('startWidth').onchange = () => {\n                let index: number = +this.listObj.value;\n                let startWidth: number = parseInt((<HTMLInputElement>document.getElementById('startWidth')).value, 10);\n                document.getElementById('rangeStartWidth').innerHTML = startWidth.toString();\n                this.circulargauge.axes[0].ranges[index].startWidth = startWidth;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('endWidth').onpointermove = document.getElementById('endWidth').ontouchmove =\n            document.getElementById('endWidth').onchange = () => {\n                let index: number = +this.listObj.value;\n                let endWidth: number = parseInt((<HTMLInputElement>document.getElementById('endWidth')).value, 10);\n                document.getElementById('rangeEndWidth').innerHTML = endWidth.toString();\n                this.circulargauge.axes[0].ranges[index].endWidth = endWidth;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n\n        document.getElementById('radius').onpointermove = document.getElementById('radius').ontouchmove =\n            document.getElementById('radius').onchange = () => {\n                let index: number = +this.listObj.value;\n                let radius: number = parseInt((<HTMLInputElement>document.getElementById('radius')).value, 10);\n                document.getElementById('roundedRadius').innerHTML = radius.toString();\n                this.circulargauge.axes[0].ranges[index].roundedCornerRadius = radius;\n                this.circulargauge.axes[0].pointers[0].animation.enable = false; this.circulargauge.refresh();\n            };\n    }\n\n    constructor() {\n        // code\n    };\n}","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"col-md-8\">\n        <ejs-circulargauge (load)='load($event)' background='transparent' style='display:block;' id='range-container'\n            #range=''>\n            <e-axes>\n                <e-axis minimum=0 radius='80%' maximum=120 startAngle=210 endAngle=150 [majorTicks]='majorTicks'\n                    [labelStyle]='labelStyle' [lineStyle]='lineStyle' [minorTicks]='minorTicks'\n                    [annotations]='annotaions'>\n                    <e-ranges>\n                        <e-range start=0 end=40 color='#30B32D' startWidth=10 endWidth=10 roundedCornerRadius=\"0\">\n                        </e-range>\n                        <e-range start=40 end=80 color='#FFDD00' startWidth=10 endWidth=10 roundedCornerRadius=\"0\">\n                        </e-range>\n                        <e-range start=80 end=120 color='#F03E3E' startWidth=10 endWidth=10 roundedCornerRadius=\"0\">\n                        </e-range>\n                    </e-ranges>\n                    <e-pointers>\n                        <e-pointer value=65 radius='60%' pointerWidth=8 [needleTail]='tail' [cap]=\"pointerCap\"\n                            [animation]=\"animation\">\n                        </e-pointer>\n                    </e-pointers>\n                </e-axis>\n            </e-axes>\n        </ejs-circulargauge>\n    </div>\n    <div class=\"col-md-4 property-section\">\n        <div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n                <table id=\"property\" class=\"property-panel-table\" title=\"Properties\"\n                    style=\"width: 100%; margin-left: -10px\">\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div style=\"font-size:14px\"> Select Range </div>\n                        </td>\n                        <td>\n                            <div>\n                                <select id=\"rangeSelect\" class=\"form-control\" style=\"width:90%\">\n                                    <option value=\"0\" selected=true>Low</option>\n                                    <option value=\"1\">Medium</option>\n                                    <option value=\"2\">High</option>\n                                </select>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"property1\" class=\"property-panel-table\" title=\"Properties\"\n                    style=\"width: 100%; margin-left: -10px\">\n                    <colgroup>\n                        <col span=\"1\" style=\"width: 45%;\">\n                        <col span=\"1\" style=\"width: 35%;\">\n                        <col span=\"1\" style=\"width: 20%;\">\n                    </colgroup>\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div style=\"font-size:14px\">Range Start</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"range\" id=\"greenRangeStart\" value=\"0\" min=\"0\" max=\"40\" style=\"width: 100%;\" />\n                            </div>\n                        </td>\n                        <td style=\"text-align: center; padding-top: 10px; padding-left: 5%\">\n                            <span id='rangeStart' style=\"font-size:14px\">0</span>\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"property2\" class=\"property-panel-table\" title=\"Properties\"\n                    style=\"width: 100%; margin-left: -10px\">\n                    <colgroup>\n                        <col span=\"1\" style=\"width: 45%;\">\n                        <col span=\"1\" style=\"width: 35%;\">\n                        <col span=\"1\" style=\"width: 20%;\">\n                    </colgroup>\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div style=\"font-size:14px\">Range End</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"range\" id=\"greenRangeEnd\" value=\"40\" min=\"0\" max=\"40\"\n                                    style=\"width: 100%;\" />\n                            </div>\n                        </td>\n                        <td style=\"text-align: center; padding-top: 10px; padding-left: 5%\">\n                            <span id='rangeEnd' style=\"font-size:14px\">40</span>\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"property3\" class=\"property-panel-table\" title=\"Properties\"\n                    style=\"width: 100%; margin-left: -10px\">\n                    <colgroup>\n                        <col span=\"1\" style=\"width: 45%;\">\n                        <col span=\"1\" style=\"width: 35%;\">\n                        <col span=\"1\" style=\"width: 20%;\">\n                    </colgroup>\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div style=\"font-size:14px\">Start Width</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"range\" id=\"startWidth\" value=\"10\" min=\"0\" max=\"30\" style=\"width: 100%;\" />\n                            </div>\n                        </td>\n                        <td style=\"text-align: center; padding-top: 10px; padding-left: 5%\">\n                            <span id='rangeStartWidth' style=\"font-size:14px\">10 </span>\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"property4\" class=\"property-panel-table\" title=\"Properties\"\n                    style=\"width: 100%; margin-left: -10px\">\n                    <colgroup>\n                        <col span=\"1\" style=\"width: 45%;\">\n                        <col span=\"1\" style=\"width: 35%;\">\n                        <col span=\"1\" style=\"width: 20%;\">\n                    </colgroup>\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div style=\"font-size:14px\">End Width</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"range\" id=\"endWidth\" value=\"10\" min=\"0\" max=\"30\" style=\"width: 100%;\" />\n                            </div>\n                        </td>\n                        <td style=\"text-align: center; padding-top: 10px; padding-left: 5%\">\n                            <span id='rangeEndWidth' style=\"font-size:14px\">10 </span>\n                        </td>\n                    </tr>\n                </table>\n                <table id=\"property5\" class=\"property-panel-table\" title=\"Properties\"\n                    style=\"width: 100%; margin-left: -10px\">\n                    <colgroup>\n                        <col span=\"1\" style=\"width: 45%;\">\n                        <col span=\"1\" style=\"width: 35%;\">\n                        <col span=\"1\" style=\"width: 20%;\">\n                    </colgroup>\n                    <tr style=\"height: 40px\">\n                        <td>\n                            <div style=\"font-size:14px\">Corner Radius</div>\n                        </td>\n                        <td style=\"width: 40%;\">\n                            <div>\n                                <input type=\"range\" id=\"radius\" value=\"0\" min=\"0\" max=\"12\" style=\"width: 100%;\" />\n                            </div>\n                        </td>\n                        <td style=\"text-align: center; padding-top: 10px; padding-left: 5%\">\n                            <span id='roundedRadius' style=\"font-size:14px\">0 </span>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- custom code start -->\n<style>\n    .control-section {\n        min-height: 450px;\n    }\n</style>\n<!-- custom code end -->","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-circulargauge\":\"*\",\"@syncfusion/ej2-angular-circulargauge\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-notifications\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}