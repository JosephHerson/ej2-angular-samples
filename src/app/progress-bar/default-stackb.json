{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component';\n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","app.component.ts":"import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ProgressBar, ILoadedEventArgs, ProgressTheme, AnimationModel } from '@syncfusion/ej2-progressbar';\nimport { ProgressBarAllModule } from '@syncfusion/ej2-angular-progressbar';\n\n/**\n * RTl sample\n */\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None,\n    standalone: true,\n    imports: [ProgressBarAllModule],\n})\n\nexport class AppComponent {\n    public type: string = 'Circular';\n    public height: string = '150';\n    public width: string = '150';\n    public min: number = 0;\n    public max: number = 100;\n    public value: number = 100;\n    public startAngle: number = 180;\n    public endAngle: number = 180;\n    public type1: string = 'Circular';\n    public min1: number = 0;\n    public max1: number = 100;\n    public value1: number = 70;\n    public secondaryProgress1: number = 90;\n    public type2: string = 'Circular';\n    public min2: number = 0;\n    public max2: number = 100;\n    public value2: number = 100;\n    public segmentcount2: number = 4;\n    public type3: string = 'Circular';\n    public min3: number = 0;\n    public max3: number = 100;\n    public value3: number = 20;\n    public isIndeterminate3: boolean = true;\n    public animation: AnimationModel = { enable: true, duration: 2000, delay: 0 };\n    @ViewChild('circular')\n    public circular: ProgressBar;\n    @ViewChild('circular1')\n    public circular1: ProgressBar;\n    @ViewChild('circular2')\n    public circular2: ProgressBar;\n    @ViewChild('circular3')\n    public circular3: ProgressBar;\n    public onClick = () => {\n        this.circular.refresh();\n        this.circular1.refresh();\n        this.circular2.refresh();\n        this.circular3.refresh();\n    }\n    public annotationColors: string[] = ['#e91e63', '#0078D6', '#317ab9', '#007bff', '#FFD939'];\n    public load(args: ILoadedEventArgs): void {\n        let div: HTMLCollection = document.getElementsByClassName('progress-text-align');\n        let selectedTheme: string = location.hash.split('/')[1];\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n        args.progressBar.theme = <ProgressTheme>(selectedTheme.charAt(0).toUpperCase() +\n            selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        if(args.progressBar.theme === 'HighContrast' || args.progressBar.theme === 'Bootstrap5Dark' || args.progressBar.theme === 'BootstrapDark' || args.progressBar.theme === 'FabricDark'\n        || args.progressBar.theme === 'TailwindDark' || args.progressBar.theme === 'MaterialDark' || args.progressBar.theme === 'Material3Dark') {\n                for (let i = 0; i < div.length; i++) {\n                    div[i].setAttribute('style', 'color:white');\n                }\n        }\n    }\n}","polyfills.ts":"import 'zone.js';","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n        <script>\n        var orgin = location.origin;\n        var baseref = location.href.split('#')[0].replace(orgin, '');\n        if (baseref.charAt(baseref.length - 1) !== '/') {\n         baseref += '/';\n        }\n         document.write('<base href=\"' + baseref + '\">');\n       </script>\n           <!-- Google Tag Manager -->\n           <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n           new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n           j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n           'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n           })(window,document,'script','dataLayer','GTM-W8WD8WN');</script>\n            <!-- End Google Tag Manager -->\n        <script>\n        var orgin = location.origin;\n        var baseref = location.href.split('#')[0].replace(orgin, '');\n        if (baseref.charAt(baseref.length - 1) !== '/') {\n         baseref += '/';\n        }\n         document.write('<base href=\"' + baseref + '\">');\n       </script>\n           <!-- Google Tag Manager -->\n           <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n           new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n           j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n           'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n           })(window,document,'script','dataLayer','GTM-W8WD8WN');</script>\n            <!-- End Google Tag Manager -->\n  <meta charset=\"utf-8\">\n  <title>Angular Badge Accordion Example - Syncfusion Demos</title>\n\t<meta name=\"description\" content=\"This example demonstrates the Variants in Angular Message Component. Explore here for more details.\" />\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n              <!-- Google Tag Manager (noscript) -->\n              <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n              <!-- End Google Tag Manager (noscript) -->\n           <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <h1 class=\"sb-bread-crumb-text\">Example for Variants in Angular Message Component</h1>\n\t<app-root></app-root>\n</body>\n</html>\n","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n    <div class=\"row\" style=\"margin-top: 8%;\">\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"circular-container\">\n                <ejs-progressbar #circular id='circular1' [type]='type' [maximum]='max' [minimum]='min'\n                [value]='value' [width]='width' [height]='height'\n                [animation]='animation' (load)='load($event)'>\n            </ejs-progressbar>\n            </div>\n            <div class=\"progress-text-align\">Determinate</div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"rtl-container\">\n                <ejs-progressbar #circular1 id='circular2' [type]='type1' [maximum]='max1' [minimum]='min1'\n                [value]='value1' [width]='width' [height]='height'\n                [animation]='animation' (load)='load($event)'\n                [secondaryProgress]='secondaryProgress1'>\n            </ejs-progressbar>\n            </div>\n            <div class=\"progress-text-align\">Buffer </div>\n\n        </div>\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"track-container\">\n                <ejs-progressbar #circular2 id='circular3' [type]='type2' [maximum]='max2' [minimum]='min2'\n                        [value]='value2' [width]='width' [height]='height'\n                        [animation]='animation' (load)='load($event)' [segmentCount]='segmentcount2'\n                        >\n                    </ejs-progressbar>\n            </div>\n            <div class=\"progress-text-align\">Segment</div>\n        </div>\n\n        <div class=\"col-lg-3 col-md-3 col-3\" align=\"center\">\n            <div id=\"rounded-container\">\n                <ejs-progressbar #circular3 id='circular4' [type]='type3' [maximum]='max3' [minimum]='min3'\n                [value]='value3' [width]='width' [height]='height' [isIndeterminate]='isIndeterminate3'\n                [animation]='animation' (load)='load($event)'>\n            </ejs-progressbar>\n            </div>\n            <div class=\"progress-text-align\">Indeterminate</div>\n        </div>\n    </div>\n    <div class=\"row\" align=\"center\">\n        <button id=\"reLoad\" (click)=\"onClick()\" class=\"e-control e-btn e-lib e-outline e-primary\">Reload</button>\n    </div>\n</div>\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n    .progress-text-align {\n        font-family: Roboto-Regular;\n        font-size: 14px;        \n    }\n    #reLoad {\n        border-radius: 4px;\n        text-transform: capitalize;\n        margin-top: 3%;\n    }\n</style>\n","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2-progressbar\":\"*\",\"@syncfusion/ej2-angular-base\":\"*\",\"tslib\":\"^2.3.0\",\"@syncfusion/ej2-angular-progressbar\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}