{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ListViewModule } from '@syncfusion/ej2-angular-lists';\nimport { ToolbarModule } from '@syncfusion/ej2-angular-navigations';\nimport { TooltipModule } from '@syncfusion/ej2-angular-popups';\nimport { NumericTextBoxModule } from '@syncfusion/ej2-angular-inputs';\nimport { CheckBoxModule } from '@syncfusion/ej2-angular-buttons';\nimport { DropDownListModule } from '@syncfusion/ej2-angular-dropdowns';\n/**\n * Tooltip default sample\n */\n\nimport { Component, ViewChild } from '@angular/core';\nimport { TooltipComponent, Position } from '@syncfusion/ej2-angular-popups';\n\n@Component({\n    standalone: true,\n    imports: [ TooltipModule, ToolbarModule, ListViewModule, DropDownListModule, CheckBoxModule,       NumericTextBoxModule,  CommonModule],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n})\nexport class AppComponent {\n    @ViewChild('tooltip')\n    public tooltip: TooltipComponent;\n    @ViewChild('button')\n    public button: any;\n    @ViewChild('textbox')\n    public textbox: any;\n\n    public waterMark = 'Open Mode';\n    public dataDDL = ['Hover', 'Click', 'Auto'];\n    public tContent = 'Tooltip Content';\n\n    public created() {\n        if (document.getElementById('right-pane')) {\n        document.getElementById('right-pane').addEventListener('click', this.onClick.bind(this));\n        document.getElementById('right-pane').addEventListener('scroll', this.onScroll.bind(this));\n        }\n    }\n    public onClick(args: any) {\n        if (args && !args.target.classList.contains('e-btn')) {\n        if (this.tooltip && document.getElementsByClassName('e-tooltip-wrap').length > 0) {\n            this.tooltip.close();\n        }\n        }\n    }\n    public onScroll() {\n        if (document.getElementsByClassName('e-tooltip-wrap').length > 0) {\n            this.tooltip.close();\n        }\n    }\n    public wChange(args: any) {\n        this.tooltip.width = args.value;\n    }\n    public hChange(args: any) {\n        this.tooltip.height = args.value;\n    }\n    public ddlChange(args: any) {\n        this.tooltip.opensOn = args.value;\n        this.tooltip.refresh(this.button);\n    }\n    public cChange(args: any) {\n        this.tooltip.isSticky = args.checked;\n    }\n    public keymonitor(args: any) {\n        this.tooltip.close();\n        this.tooltip.content = args.currentTarget.value;\n    }\n}\n","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n\n<div class=\"control-section\">\n\t<div class=\"col-lg-8 control-section\">\n\t\t<ejs-tooltip #tooltip id='tooltip' target='#default' opensOn='Click' [content]='tContent' (created)='created()'>\n\t\t\t<button ejs-button #button id=\"default\">Show Tooltip</button>\n\t\t</ejs-tooltip>\n\t</div>\n\t<div class=\"col-lg-4 property-section\">\n\t\t<div class=\"property-panel-section\">\n            <div class=\"property-panel-header\">Properties</div>\n            <div class=\"property-panel-content\">\n\t\t\t\t<table id=\"property\" title=\"Properties\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 50%\">\n\t\t\t\t\t\t\t\t<div class=\"userselect\">Content</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 50%;padding-right: 10px\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<input (keyup)=\"keymonitor($event)\" textbox id=\"value\" #textbox type=\"text\" class=\"e-input\" placeholder=\"Tooltip content\">\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 50%\">\n\t\t\t\t\t\t\t\t<div class=\"userselect\">Height</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 50%;padding-right: 10px\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<ejs-numerictextbox id=\"height\" cssClass=\"e-input\" value=\"45\" (change)='hChange($event)'></ejs-numerictextbox>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 50%\">\n\t\t\t\t\t\t\t\t<div class=\"userselect\">Width</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 50%;padding-right: 10px\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<ejs-numerictextbox id=\"width\" cssClass=\"e-input\" value=\"100\" (change)='wChange($event)'></ejs-numerictextbox>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 50%\">\n\t\t\t\t\t\t\t\t<div class=\"userselect\">Open Mode</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 50%;padding-right: 10px\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<ejs-dropdownlist id='ddlelement' (change)='ddlChange($event)' [dataSource]='dataDDL' placeholder='OpensOn'></ejs-dropdownlist>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td style=\"width: 50%\">\n\t\t\t\t\t\t\t\t<div class=\"userselect\">Sticky Mode</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td style=\"width: 50%;padding-right: 10px\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<ejs-checkbox (change)='cChange($event)' id=\"sticky\"></ejs-checkbox>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n","app.component.css":".userselect {\n    -webkit-user-select: none;\n    /* Safari 3.1+ */\n    -moz-user-select: none;\n    /* Firefox 2+ */\n    -ms-user-select: none;\n    /* IE 10+ */\n    user-select: none;\n    /* Standard syntax */\n}\n\n#property {\n    padding-top: 200px;\n}\n\n#tooltip {\n    position: relative;\n    left: 50%;\n    top: 100px;\n}\n\n#value {\n    height: 34px;\n    width: 136px;\n    padding-left: 10px;\n}\n\n.highcontrast #value {\n    border: 1px solid;\n    border-width: 1px;\n    color: #fff;\n    background: #000;\n}\n","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-dropdowns\":\"*\",\"@syncfusion/ej2-angular-dropdowns\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-inputs\":\"*\",\"@syncfusion/ej2-angular-inputs\":\"*\",\"@syncfusion/ej2-popups\":\"*\",\"@syncfusion/ej2-angular-popups\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-angular-navigations\":\"*\",\"@syncfusion/ej2-lists\":\"*\",\"@syncfusion/ej2-angular-lists\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}