{"main.ts":"import { bootstrapApplication } from '@angular/platform-browser'; \n\nimport { appConfig } from './app/app.config'; \n\nimport { AppComponent } from './app.component'; \n\nimport { environment } from './environments/environment'; \n\nimport { enableProdMode } from '@angular/core'; \n\nif (environment.production) { enableProdMode(); } \n\nbootstrapApplication(AppComponent, appConfig).catch((err) => console.error(err));","polyfills.ts":"import 'zone.js';","angular.json":"{\n    \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\n    \"version\": 1,\n    \"newProjectRoot\": \"projects\",\n    \"projects\": {\n      \"demo\": {\n        \"root\": \"\",\n        \"sourceRoot\": \"\",\n        \"projectType\": \"application\",\n        \"prefix\": \"app\",\n        \"schematics\": {},\n        \"architect\": {\n          \"build\": {\n            \"builder\": \"@angular-devkit/build-angular:browser\",\n            \"options\": {\n              \"outputPath\": \"dist/demo\",\n              \"index\": \"index.html\",\n              \"main\": \"main.ts\",\n              \"polyfills\": \"polyfills.ts\",\n              \"tsConfig\": \"tsconfig.app.json\",\n              \"assets\": [\n                \"favicon.ico\",\n                \"assets\"\n              ],\n              \"styles\": [\n                \n              ],\n              \"scripts\": []\n            },\n            \"configurations\": {\n              \"production\": {\n                \"fileReplacements\": [\n                  {\n                    \"replace\": \"src/environments/environment.ts\",\n                    \"with\": \"src/environments/environment.prod.ts\"\n                  }\n                ],\n                \"optimization\": true,\n                \"outputHashing\": \"all\",\n                \"sourceMap\": false,\n                \"extractCss\": true,\n                \"namedChunks\": false,\n                \"aot\": true,\n                \"extractLicenses\": true,\n                \"vendorChunk\": false,\n                \"buildOptimizer\": true\n              }\n            }\n          },\n          \"serve\": {\n            \"builder\": \"@angular-devkit/build-angular:dev-server\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            },\n            \"configurations\": {\n              \"production\": {\n                \"browserTarget\": \"demo:build:production\"\n              }\n            }\n          },\n          \"extract-i18n\": {\n            \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\n            \"options\": {\n              \"browserTarget\": \"demo:build\"\n            }\n          },\n          \"test\": {\n            \"builder\": \"@angular-devkit/build-angular:karma\",\n            \"options\": {\n              \"main\": \"src/test.ts\",\n              \"polyfills\": \"src/polyfills.ts\",\n              \"tsConfig\": \"src/tsconfig.spec.json\",\n              \"karmaConfig\": \"src/karma.conf.js\",\n              \"styles\": [\n                \"styles.css\"\n              ],\n              \"scripts\": [],\n              \"assets\": [\n                \"src/favicon.ico\",\n                \"src/assets\"\n              ]\n            }\n          },\n          \"lint\": {\n            \"builder\": \"@angular-devkit/build-angular:tslint\",\n            \"options\": {\n              \"tsConfig\": [\n                \"src/tsconfig.app.json\",\n                \"src/tsconfig.spec.json\"\n              ],\n              \"exclude\": [\n                \"**/node_modules/**\"\n              ]\n            }\n          }\n        }\n      }\n    },\n    \"defaultProject\": \"demo\"\n  }\n  \n","environments/environment.ts":"// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","environments/environment.prod.ts":"export const environment = {\n  production: true\n};\n","index.html":"<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Window</title>\n  <link href=\"../../styles/material.css\" rel=\"stylesheet\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n</head>\n<body class=\"ej2-new\"> \n\n            <!-- Google Tag Manager (noscript) -->\n            <noscript><iframe src=\"https://www.googletagmanager.com/ns.html?id=GTM-W8WD8WN\" height=\"0\" width=\"0\" style=\"display:none;visibility:hidden\"></iframe></noscript>\n            <!-- End Google Tag Manager (noscript) -->\n    <div hidden id=\"sync-analytics\" data-queue=\"EJ2 - Angular - Demos\"></div>\n\n  <app-root></app-root>\n</body>\n</html>\n","app.component.ts":"import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { ChartAllModule, RangeNavigatorAllModule } from '@syncfusion/ej2-angular-charts';\nimport { ButtonAllModule, SwitchAllModule } from '@syncfusion/ej2-angular-buttons';\nimport { GridAllModule } from '@syncfusion/ej2-angular-grids';\nimport { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ChartTheme, IRangeLoadedEventArgs, StepLineSeries, AreaSeries, Logarithmic,\n     Chart, IChangedEventArgs, RangeTooltip, IRangeTooltipRenderEventArgs, ILabelRenderEventsArgs } from '@syncfusion/ej2-charts';\nimport { Browser } from '@syncfusion/ej2-base';\n\n/**\n * Sample for range navigator with logarithmic axis\n */\nlet data: object[] = [];\nlet max: number = 100;\nfor (let i: number = 0; i < 100; i++) {\n    data.push({\n        x: Math.pow(10, i * 0.1),\n        y: Math.floor(Math.random() * (80 - 30 + 1)) + 30\n    });\n}\n\nlet selectedTheme: string = location.hash.split('/')[1];\nselectedTheme = selectedTheme ? selectedTheme : 'Material';\nlet theme: ChartTheme = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast');\nlet logthemes: string[] = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentDark', 'material3', 'material3dark'];\nlet borderColor: string[] = ['#6355C7', '#8F80F4', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#1AC9E6', '#1AC9E6', '#6355C7', '#4EAAFF'];\nlet regionColor: string[] = ['rgba(99, 85, 199, 0.3)', 'rgba(143, 128, 244, 0.3)', 'rgba(90, 97, 246, 0.3)', 'rgba(139, 92, 246, 0.3)', 'rgba(0, 189, 174, 0.3)',\n'rgba(158, 203, 8, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(161, 110, 229, 0.3)', 'rgba(68, 114, 196, 0.3)',\n'rgba(68, 114, 196, 0.3)', 'rgba(121, 236, 228, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(26, 201, 230, 0.3)', 'rgba(99, 85, 199, 0.3)', 'rgba(78, 170, 255, 0.3)'];\n    \n@Component({\n    standalone: true,\n    imports: [ ChartAllModule, RangeNavigatorAllModule, GridAllModule, ButtonAllModule, SwitchAllModule , ],\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class AppComponent {\n    @ViewChild('chartLog')\n    public Chart: Chart;\n    public primaryXAxis: Object = {\n        valueType: 'Logarithmic',  interval: 1,\n        edgeLabelPlacement: 'Shift', majorGridLines: { width: 0 }, title: 'Numbers of Goods Consumers',\n    };\n\n    public dataSource: Object = data;\n\n    public chartArea: Object = { border: { width: 0 } };\n\n    public primaryYAxis: Object = { title: 'Inflation', minimum: 0, maximum: 100, labelFormat: '{value}%',\n           majorTickLines: { width: 0 }, lineStyle: { width: 0 } };\n\n    public chartHeight: string = '350';\n\n    public width: string = Browser.isDevice ? '100%' : '80%';\n\n    public fill: string = 'url(#' + theme.toLowerCase() + '-gradient-chart)';\n\n    public border: Object = { width: 2, color: borderColor[logthemes.indexOf(theme.toLowerCase())] };\n\n    public marker: Object = { visible: true };\n\n    public tooltip: Object = { enable: true };\n\n    public interval: number = 1;\n\n    public theme: string = <ChartTheme>(selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\").replace(/contrast/i, 'Contrast');\n\n    public value: Object = [4, 6];\n\n    public changed(args: IChangedEventArgs): void {\n        this.Chart.primaryXAxis.zoomFactor = args.zoomFactor;\n        this.Chart.primaryXAxis.zoomPosition = args.zoomPosition;\n        this.Chart.dataBind();\n    };\n\n    public load(args: IRangeLoadedEventArgs) {\n        args.rangeNavigator.rangeTooltipModule = new RangeTooltip(args.rangeNavigator);\n    };\n\n    public labelRender(args: ILabelRenderEventsArgs): void {\n        args.text = (+args.text).toExponential().toLocaleUpperCase();\n    };\n\n    public tooltipRender(args: IRangeTooltipRenderEventArgs): void {\n        args.text = [(+(+args.text).toFixed(1)).toExponential(1).toString().toLocaleUpperCase()];\n    }\n\n}","app/app.config.ts":"import { ApplicationConfig } from '@angular/core';\n\n export const appConfig: ApplicationConfig = { providers: [], };","app.component.html":"<style>\r\n.control-section{\r\n    margin-top: 100px;\r\n}\r\n\r</style>\n<div class=\"control-section\">\n     <h4 align=\"center\" style=\"font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;\">Inflation vs Goods Consumers</h4>\n    <div align=\"center\">\n        <ejs-rangenavigator style='display:block' align='center' id='containerLog' [value]='value' labelPosition='Outside' valueType='Logarithmic'\n            [interval]='interval'  [width]='width' [tooltip]='tooltip' [theme]='theme' (changed)='changed($event)' \n            (tooltipRender)='tooltipRender($event)' (labelRender)='labelRender($event)' labelIntersectAction='None' (load)='load($event)'>\n            <e-rangenavigator-series-collection>\n                <e-rangenavigator-series [dataSource]='dataSource' type='StepLine' xName='x' yName='y' width=2>\n                </e-rangenavigator-series>\n            </e-rangenavigator-series-collection>\n        </ejs-rangenavigator>\n    </div>\n    <div align=\"center\">\n        <ejs-chart #chartLog style='display:block;' id='chartLog' align='center' [chartArea]='chartArea' [width]='width' [primaryXAxis]='primaryXAxis'\n            [primaryYAxis]='primaryYAxis' height='350' [theme]='theme'>\n            <e-series-collection>\n                <e-series [dataSource]='dataSource' type='StepArea' [marker]='marker' xName='x' yName='y' width='2' [fill]='fill' [border]='border'>\n                </e-series>\n            </e-series-collection>\n        </ejs-chart>\n    </div>\n</div>\n\n<style>\n    #control-containerLog {\n        padding: 0px !important;\n    }\n    #material-gradient-chart stop {\n        stop-color: #00bdae;\n    }\n    \n    #fabric-gradient-chart stop {\n        stop-color: #4472c4;\n    }\n    \n    #bootstrap-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #bootstrap4-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n    \n    #highcontrast-gradient-chart stop {\n        stop-color: #79ECE4;\n    }\n\t\t\n\t#tailwind-gradient-chart stop {\n        stop-color: #5A61F6;\n    }\n\n    #materialdark-gradient-chart stop {\n        stop-color: #9ECB08;\n    }\n\n    #fabricdark-gradient-chart stop {\n        stop-color: #4472c4;\n    }\n\n    #bootstrapdark-gradient-chart stop {\n        stop-color: #a16ee5;\n    }\n\n    #tailwinddark-gradient-chart stop {\n        stop-color: #8B5CF6;\n    }\n    \n    #bootstrap5-gradient-chart stop {\n        stop-color: #6355C7;\n    }\n\n    #bootstrap5dark-gradient-chart stop {\n        stop-color: #8F80F4;\n    }\n\n    #fluent-gradient-chart stop {\n        stop-color: #1AC9E6;\n    }\n\n    #fluentdark-gradient-chart stop {\n      stop-color: #1AC9E6;\n    }\n\n    #material3-gradient-chart stop {\n        stop-color: #6355C7;\n    }\n\n    #material3dark-gradient-chart stop {\n        stop-color: #4EAAFF;\n    }\n\n    .chart-gradient stop[offset=\"0\"] {\n        stop-opacity: 0.9;\n    }\n    \n    .chart-gradient stop[offset=\"1\"] {\n        stop-opacity: 0.3;\n    }\n</style>\n<svg style=\"height: 0\">\n    <defs>\n        <linearGradient id=\"material-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fabric-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap4-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"highcontrast-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"tailwind-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n\t\t\t<stop offset=\"0\"></stop>\n\t\t\t<stop offset=\"1\"></stop>\n\t\t</linearGradient>\n        <linearGradient id=\"materialdark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fabricdark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrapdark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"tailwinddark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"bootstrap5-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n\t\t\t<stop offset=\"0\"></stop>\n\t\t\t<stop offset=\"1\"></stop>\n\t\t</linearGradient>\n        <linearGradient id=\"bootstrap5dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n\t\t\t<stop offset=\"0\"></stop>\n\t\t\t<stop offset=\"1\"></stop>\n\t\t</linearGradient>\n        <linearGradient id=\"fluent-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"fluentdark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"material3-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n        <linearGradient id=\"material3dark-gradient-chart\" style=\"opacity: 0.75\" class=\"chart-gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n            <stop offset=\"0\"></stop>\n            <stop offset=\"1\"></stop>\n        </linearGradient>\n    </defs>\n</svg>","app.component.css":"","dependencies.json":"{\"@syncfusion/ej2-angular-base\":\"*\",\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-grids\":\"*\",\"@syncfusion/ej2-angular-grids\":\"*\",\"@syncfusion/ej2-buttons\":\"*\",\"@syncfusion/ej2-angular-buttons\":\"*\",\"@syncfusion/ej2-charts\":\"*\",\"@syncfusion/ej2-angular-charts\":\"*\",\"@syncfusion/ej2-calendars\":\"*\",\"@syncfusion/ej2-data\":\"*\",\"@syncfusion/ej2-excel-export\":\"*\",\"@syncfusion/ej2-navigations\":\"*\",\"@syncfusion/ej2-pdf-export\":\"*\",\"@syncfusion/ej2-svg-base\":\"*\",\"@syncfusion/ej2-icons\":\"*\",\"codemirror\":\"5.65.15\",\"marked\":\"0.3.19\",\"@types/codemirror\":\"0.0.56\",\"@types/marked\":\"0.3.0\",\"@angular/http\":\"*\",\"rxjs-compat\":\"*\",\"core-js\":\"2.6.9\"}"}